00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 12/1/2014 3:10:25 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :CSS422 Project
00000000                             3  * Written by :Nicholas Abel and Julio Perez
00000000                             4  * Date       :November 7, 2014
00000000                             5  * Description:Disassembler
00000000                             6  *
00000000                             7  *Nomenclature:   | OpCode |     Part       | Job
00000000                             8  *                | OpCode | Part | SubPart | Job
00000000                             9  *
00000000                            10  *-----------------------------------------------------------
00000000  =000000AA                 11  STARTPT   EQU $AA     *starting point
00000000  =00000055                 12  ENDPT     EQU $55     *ending point
00000000  =00000400                 13  temp      EQU $400    *location to work at
00000000  =0000A000                 14  stack     EQU $A000
00000000  =0000E00F                 15  example   EQU %1110000000001111    * I made up bits 0 to 11      
00000000  =0000000C                 16  shift12   EQU 12                   * Shift 12 bits 
00000000  =0000000A                 17  shift10   EQU 10                   * Shift 10 bits
00000000  =0000000D                 18  shift13   EQU 13 
00000000                            19  
00000000                            20  
00001000                            21          ORG    $1000
00001000                            22  START:                          
00001000                            23  *        LEA     ASKSTART, A1    *message to ask user for input
00001000                            24  *        MOVE.B  #13, D0         *rule 13 allows print without line feed and carriage return if neccesary
00001000                            25  *        TRAP    #15             *Display A1 message
00001000                            26  *        
00001000                            27  *        MOVE.B  #4, D0          *input rule saves to D1
00001000                            28  *        TRAP    #15             *initiate read from keyboard
00001000                            29  *        
00001000                            30  *        MOVE.B  D1, STARTPT        *save number to NUM1
00001000                            31  *        
00001000                            32  *        LEA     ASKEND, A1      *ask about ending memory location
00001000                            33  *        MOVE.B  #13, D0         
00001000                            34  *        TRAP    #15             *display A1
00001000                            35  *        
00001000                            36  *        MOVE.B  #4, D0          *
00001000                            37  *        TRAP    #15
00001000                            38  *        
00001000                            39  *        MOVE.B  D1, ENDPT      *ending memory location stored
00001000                            40  
00001000  4FF9 0000A000             41          LEA     stack,SP        *Load the SP
00001006  41F9 0000102A             42          LEA     jmp_table,A0    *Index into the table
0000100C                            43  
0000100C  4280                      44          CLR.L   D0              *Zero it
0000100E  4281                      45          CLR.L   D1
00001010                            46   
00001010                            47  *Get word size element
00001010  3C3C E00F                 48              MOVE.W      #example,D6     *Example variable put in place D6        
00001014  3006                      49              MOVE.W      D6, D0          *D0 loaded
00001016  123C 000C                 50              MOVE.B      #shift12,D1     *Shift 12 loaded  
0000101A  E268                      51              LSR.W       D1,D0           *D0 Shifted by 12
0000101C  C0FC 0006                 52              MULU        #6,D0           *Form offset     
00001020                            53  
00001020  4EB0 0000                 54              JSR         0(A0,D0)        *Jump indirect with index
00001024                            55  * check read pointer location against EnDPt if end done
00001024                            56  * otherwise move back into read sub routine
00001024                            57                      
00001024                            58  
00001024                            59  *----------------------------------------------------------------
00001024                            60  *                       Input Routine                           |
00001024                            61  *----------------------------------------------------------------
00001024                            62  
00001024  2C7C 000000AA             63      MOVEA.L #STARTPT,   A6
0000102A                            64  
0000102A                            65  *----------------------------------------------------------------
0000102A                            66  *                       OpCode ID Table                         |
0000102A                            67  *----------------------------------------------------------------
0000102A                            68  
0000102A                            69  
0000102A                            70  jmp_table  
0000102A                            71  
0000102A  4EF9 0000108A             72                 JMP         code0000
00001030                            73  
00001030  4EF9 0000108E             74                 JMP         code0001
00001036                            75  
00001036  4EF9 00001092             76                 JMP         code0010
0000103C                            77  
0000103C  4EF9 00001096             78                 JMP         code0011
00001042                            79  
00001042  4EF9 0000109A             80                 JMP         code0100
00001048                            81  
00001048  4EF9 0000109E             82                 JMP         code0101
0000104E                            83  
0000104E  4EF9 000010A2             84                 JMP         code0110
00001054                            85  
00001054  4EF9 000010A6             86                 JMP         code0111
0000105A                            87  
0000105A  4EF9 000010AA             88                 JMP         code1000
00001060                            89  
00001060  4EF9 000010AE             90                 JMP         code1001
00001066                            91  
00001066  4EF9 000010B2             92                 JMP         code1010
0000106C                            93  
0000106C  4EF9 000010B6             94                 JMP         code1011
00001072                            95  
00001072  4EF9 000010B8             96                 JMP         code1100
00001078                            97  
00001078  4EF9 000010BC             98                 JMP         code1101
0000107E                            99  
0000107E  4EF9 000010C0            100                 JMP         code1110 *To BitShiftGroup
00001084                           101  
00001084  4EF9 000010C4            102                 JMP         code1111
0000108A                           103  
0000108A                           104  *subroutines from jump table
0000108A                           105  
0000108A                           106  
0000108A  4E72 0A8C                107  code0000       STOP        #2700
0000108E                           108  
0000108E  6000 0038                109  code0001       BRA         MoveByte
00001092                           110  
00001092  6000 0084                111  code0010       BRA         MoveLong
00001096                           112  
00001096  6000 0058                113  code0011       BRA         MoveWord
0000109A                           114  
0000109A  4E72 2700                115  code0100       STOP        #$2700
0000109E                           116  
0000109E  4E72 2700                117  code0101       STOP        #$2700
000010A2                           118  
000010A2  4E72 2700                119  code0110       STOP        #$2700
000010A6                           120  
000010A6  4E72 2700                121  code0111       STOP        #$2700
000010AA                           122  
000010AA  4E72 2700                123  code1000       STOP        #$2700
000010AE                           124  
000010AE  4E72 2700                125  code1001       STOP        #$2700
000010B2                           126  
000010B2  4E72 2700                127  code1010       STOP        #$2700
000010B6                           128   
000010B6  60FE                     129  code1011       BRA         code1011
000010B8                           130  
000010B8  4E72 2700                131  code1100       STOP        #$2700
000010BC                           132  
000010BC  4E72 2700                133  code1101       STOP        #$2700
000010C0                           134  
000010C0  6000 00E8                135  code1110       BRA         BitShiftGroup
000010C4                           136  
000010C4  4E72 2700                137  code1111       STOP        #$2700
000010C8                           138  
000010C8                           139   
000010C8                           140  
000010C8                           141  *----------------------------------------------------------------
000010C8                           142  *                OpCode Breakdown Methods                       |
000010C8                           143  *----------------------------------------------------------------
000010C8                           144  
000010C8                           145  *--------------MOVE.B Decode-----------------------------
000010C8                           146  
000010C8  4EB9 00001536            147  MoveByte        JSR     disMoveByte
000010CE                           148  
000010CE                           149  *continue searching through the machine code for source then destination
000010CE                           150  *because of writing format
000010CE  4EB9 00001140            151                  JSR     MoveSrcDecode * src decode
000010D4  4EB9 0000141E            152                  JSR     displayComma
000010DA  4EB9 0000142C            153                  JSR     displaySpace
000010E0  4EB9 00001172            154                  JSR     MoveDesDecode   *destination decode
000010E6  4EB9 0000143A            155                  JSR     displayLine 
000010EC  4E71                     156                  NOP
000010EE  4E75                     157                  RTS
000010F0                           158           
000010F0                           159  
000010F0                           160  *--------------MOVE.W Decode-----------------------------
000010F0                           161  
000010F0  4EB9 00001544            162  MoveWord        JSR     disMoveWord
000010F6                           163  
000010F6  4EB9 00001140            164                  JSR     MoveSrcDecode * src decode
000010FC  4EB9 0000141E            165                  JSR     displayComma
00001102  4EB9 0000142C            166                  JSR     displaySpace
00001108  4EB9 00001172            167                  JSR     MoveDesDecode   *destination decode
0000110E  4EB9 0000143A            168                  JSR     displayLine 
00001114  4E71                     169                  NOP
00001116  4E75                     170                  RTS
00001118                           171                  
00001118                           172                  
00001118                           173  *--------------MOVE.L Decode-----------------------------
00001118                           174  
00001118  4EB9 00001552            175  MoveLong        JSR     disMoveLong
0000111E                           176  
0000111E  4EB9 00001140            177                  JSR     MoveSrcDecode * src decode
00001124  4EB9 0000141E            178                  JSR     displayComma
0000112A  4EB9 0000142C            179                  JSR     displaySpace
00001130  4EB9 00001172            180                  JSR     MoveDesDecode   *destination decode
00001136  4EB9 0000143A            181                  JSR     displayLine 
0000113C  4E71                     182                  NOP
0000113E  4E75                     183                  RTS
00001140                           184  
00001140                           185  *----------------------------------------------------------------
00001140                           186  *                  MOVE   Decode Methods                        |
00001140                           187  *----------------------------------------------------------------
00001140                           188  
00001140  6000 0002                189  MoveSrcDecode   BRA MoveSrcXnDecode
00001144                           190  
00001144                           191  MoveSrcXnDecode
00001144  4240                     192                  CLR     D0
00001146  4241                     193                  CLR     D1
00001148  3006                     194                  MOVE.W  D6, D0
0000114A  E658                     195                  ROR.W   #3, D0       * last three bits to isolate Xn
0000114C                           196                  
0000114C  123C 000D                197                  MOVE.B  #shift13, D1
00001150  E268                     198                  LSR.W   D1,D0        *format is good last three bits in least signifant location
00001152  3600                     199                  MOVE.W  D0, D3
00001154  6000 0002                200                  BRA     MoveSrcModeDecode
00001158                           201        
00001158                           202  MoveSrcModeDecode
00001158  4240                     203                  CLR     D0
0000115A  4241                     204                  CLR     D1
0000115C  3006                     205                  MOVE.W  D6, D0
0000115E  EC58                     206                  ROR.W   #6, D0
00001160  123C 000A                207                  MOVE.B  #shift10,D1     *Prepare D1 for shifting 10
00001164                           208  
00001164  E268                     209                  LSR.W   D1,D0           *Shift D0 #10 bits to the right
00001166                           210                  
00001166  E648                     211                  LSR.W   #3, D0   *D2 now has the mode
00001168  3400                     212                  MOVE.W  D0, D2
0000116A  4EB9 000012AE            213                  JSR     ModeCompare
00001170  4E75                     214                  RTS    
00001172                           215  
00001172                           216  
00001172                           217  
00001172                           218  
00001172                           219  *------------
00001172  6000 0002                220  MoveDesDecode   BRA     MoveDesXnDecode        
00001176                           221  
00001176                           222  
00001176                           223  
00001176                           224  MoveDesXnDecode
00001176  3006                     225                  MOVE.W  D6,D0
00001178  123C 000C                226                  MOVE.B  #shift12, D1
0000117C  E278                     227                  ROR.W   D1, D0
0000117E  123C 000D                228                  MOVE.B  #shift13, D1
00001182                           229                  
00001182  E268                     230                  LSR.W   D1, D0    *isolates Xn
00001184  3600                     231                  MOVE.W  D0, D3
00001186                           232                  
00001186  6000 0002                233                  BRA     MoveDesModeDecode
0000118A                           234          
0000118A                           235  MoveDesModeDecode  
0000118A  3006                     236                  MOVE.W  D6, D0
0000118C  123C 000C                237                  MOVE.B  #shift12, D1
00001190  E278                     238                  ROR.W   D1, D0
00001192  123C 000A                239                  MOVE.B  #shift10, D1
00001196                           240                  
00001196  E268                     241                  LSR.W   D1, D0
00001198                           242                  *must isolate the mode
00001198  E658                     243                  ROR.W   #3, D0
0000119A  123C 000D                244                  MOVE.B  #shift13, D1
0000119E  E268                     245                  LSR.W   D1, D0       *mode isolated
000011A0  3400                     246                  MOVE.W  D0, D2
000011A2  4EB9 000012AE            247                  JSR     ModeCompare
000011A8  4E75                     248                  RTS
000011AA                           249  
000011AA                           250  
000011AA                           251  
000011AA                           252  
000011AA                           253  
000011AA                           254  
000011AA                           255  *--------------BitShiftingGroup Decode-----------------------------
000011AA                           256  
000011AA  6000 0002                257  bitShiftGroup            BRA bitShiftType
000011AE                           258  
000011AE                           259  bitShiftType
000011AE  4240                     260                  CLR         D0
000011B0  4241                     261                  CLR         D1
000011B2  4242                     262                  CLR         D2  *    
000011B4  4243                     263                  CLR         D3  *
000011B6  4244                     264                  CLR         D4  *will store direction of opcode
000011B8  4245                     265                  CLR         D5  *size
000011BA  4247                     266                  CLR         D7  *i/r
000011BC                           267                  
000011BC                           268  *------------       store direction bit               
000011BC  3806                     269                  MOVE.W      D6, D4
000011BE  EF4C                     270                  LSL.W       #7, D4
000011C0  123C 000F                271                  MOVE.B      #15, D1
000011C4  E26C                     272                  LSR.W       D1, D4
000011C6                           273  *-------------      store size bits
000011C6  1A06                     274                  MOVE.B      D6, D5
000011C8  EC0D                     275                  LSR.B       #6, D5
000011CA                           276  *--------------     store i/r
000011CA  1E06                     277                  MOVE.B      D6, D7
000011CC  E50F                     278                  LSL.B       #2, D7
000011CE  EE0F                     279                  LSR.B       #7, D7
000011D0                           280  *-------------
000011D0                           281                  
000011D0                           282  *-------------      store type
000011D0  3006                     283                  MOVE.W      D6, D0             
000011D2  E648                     284                  LSR.W       #3, D0
000011D4  323C 000E                285                  MOVE.W      #14,D1
000011D8  E368                     286                  LSL.W       D1, D0
000011DA  E268                     287                  LSR.W       D1, D0
000011DC  6000 0002                288                  BRA         BitShiftTypeCompare
000011E0                           289  
000011E0                           290                                 
000011E0                           291  BitShiftTypeCompare
000011E0  0C00 0001                292                  CMPI.B      #%01, D0
000011E4  6700 0012                293                  BEQ         LogShiftGroup
000011E8  0C00 0000                294                  CMPI.B      #%00, D0
000011EC  6700 002E                295                  BEQ         AsyShiftGroup
000011F0  0C00 0003                296                  CMPI.B      #%11, D0
000011F4  6700 0038                297                  BEQ         RotShiftGroup
000011F8                           298                  
000011F8                           299  
000011F8                           300  LogShiftGroup
000011F8  4EB9 0000156E            301                  JSR         disLogicShift    
000011FE  4EB9 00001282            302                  JSR         printDirection
00001204  4EB9 00001290            303                  JSR         printSize
0000120A  4EB9 0000123A            304                  JSR         ShiftGrpCount
00001210  4EB9 0000141E            305                  JSR         displayComma
00001216  4EB9 0000142C            306                  JSR         displaySpace
0000121C                           307  *               JSR         ShiftGrpDest
0000121C                           308                  
0000121C                           309  
0000121C                           310  LogShiftRet            
0000121C                           311                  
0000121C                           312  
0000121C                           313  
0000121C                           314  AsyShiftGroup
0000121C  4EB9 00001560            315                  JSR         disAsymmShift
00001222                           316                  
00001222  0C04 0000                317                  CMPI.B      #0, D4
00001226  6700 039C                318                  BEQ         disRightDir
0000122A  6600 0388                319                  BNE         disLeftDir
0000122E                           320  AsyShiftRet   
0000122E                           321  
0000122E                           322  RotShiftGroup
0000122E  4EB9 0000157C            323                  JSR         disRotateShift
00001234                           324                  
00001234  4EB9 00001282            325                  JSR         printDirection
0000123A                           326  
0000123A                           327  RotShiftRet
0000123A                           328  
0000123A                           329  
0000123A                           330  
0000123A                           331  ShiftGrpCount
0000123A  0C07 0000                332                  CMPI.B      #0, D7
0000123E  6700 0006                333                  BEQ         printImmData
00001242  6600 0010                334                  BNE         printRegister    
00001246                           335  
00001246                           336  
00001246                           337  printImmData    
00001246  4EB9 00001528            338                  JSR         printHashTag
0000124C  4EB9 00001262            339                  JSR         printShiftRegNumber
00001252  4E75                     340                  RTS
00001254                           341                                  
00001254                           342  printRegister
00001254  4EB9 000013CA            343                  JSR         disDnReg
0000125A  4EB9 00001262            344                  JSR         printShiftRegNumber
00001260  4E75                     345                  RTS
00001262                           346                  
00001262                           347  printShiftRegNumber
00001262  4EB9 000013CA            348                  JSR         disDnReg
00001268                           349                  
00001268  0C01 0000                350                  CMPI.B      #0, D1
0000126C  6700 024A                351                  BEQ         print8
00001270  3206                     352                  MOVE.W      D6, D1
00001272  E949                     353                  LSL.W       #4, D1
00001274  143C 000D                354                  MOVE.B      #13, D2
00001278  E469                     355                  LSR.W       D2, D1
0000127A  103C 0003                356                  MOVE.B      #3, D0
0000127E  4E4F                     357                  TRAP #15
00001280                           358                  
00001280  4E75                     359                  RTS
00001282                           360                  
00001282                           361                  
00001282                           362  
00001282                           363  *Nick:
00001282                           364  *Create sub-routine to print shift
00001282                           365  printShift
00001282                           366       
00001282                           367                                  
00001282                           368                  
00001282                           369                  
00001282                           370  
00001282                           371  printDirection
00001282  0C04 0000                372                  CMPI.B      #0, D4
00001286  6700 033C                373                  BEQ         disRightDir
0000128A  6600 0328                374                  BNE         disLeftDir
0000128E                           375  printDirRet
0000128E  4E75                     376                  RTS
00001290                           377  
00001290                           378  
00001290                           379  printSize
00001290  0C05 0000                380                  CMPI.B      #0, D5
00001294  6700 02F4                381                  BEQ         disByteSize
00001298  0C05 0001                382                  CMPI.B      #1, D5
0000129C  6700 02FA                383                  BEQ         disWordSize
000012A0  0C05 0002                384                  CMPI.B      #2, D5
000012A4  6700 0300                385                  BEQ         disLongSize
000012A8  6600 032A                386                  BNE         disError
000012AC                           387  printSizeRet
000012AC  4E75                     388                  RTS
000012AE                           389  
000012AE                           390  
000012AE                           391  
000012AE                           392  *----------------------------------------------------------------
000012AE                           393  *                         Comparisons                           |
000012AE                           394  *----------------------------------------------------------------
000012AE                           395  
000012AE                           396  
000012AE                           397  *------------------Mode Comparisons -----------------------------------------
000012AE                           398  
000012AE  0C02 0000                399  ModeCompare     CMPI.B  #%000, D2 * last three are zeroes
000012B2  6700 009E                400                  BEQ     disDnRegMode       *jump to subroutine for Data register Source
000012B6  6600 0002                401                  BNE     ModeCompare1              *FIXME: needs to have not equal Branch here
000012BA                           402                  
000012BA  0C02 0001                403  ModeCompare1    CMPI.B  #%001, D2
000012BE  6700 00A0                404                  BEQ     disAnRegMode
000012C2  6600 0002                405                  BNE     ModeCompare2
000012C6                           406                  
000012C6  0C02 0002                407  ModeCompare2    CMPI.B  #%010, D2
000012CA  6700 00A2                408                  BEQ     disAnIndMode
000012CE  6600 0002                409                  BNE     ModeCompare3
000012D2                           410                  
000012D2  0C02 0003                411  ModeCompare3    CMPI.B  #%011, D2
000012D6  6700 00B0                412                  BEQ    disAnPosMode
000012DA  6600 0002                413                  BNE     ModeCompare4
000012DE                           414  
000012DE  0C02 0004                415  ModeCompare4    CMPI.B  #%100, D2
000012E2  6700 00C4                416                  BEQ    disAnPreMode
000012E6  6600 0002                417                  BNE     ModeCompare5
000012EA                           418                  
000012EA  0C02 0007                419  ModeCompare5    CMPI.B  #%111, D2
000012EE                           420  *                BEQ    disEAmode
000012EE  6600 02E4                421                  BNE     disError
000012F2                           422  
000012F2                           423               
000012F2                           424  
000012F2                           425  *---------------------Register Compare---------------------                
000012F2  0C03 0000                426  XnCompare       CMPI.b  #%000, D3
000012F6  6700 0150                427                  BEQ     Print0
000012FA  6600 0002                428                  BNE     XnCompare1
000012FE                           429                  
000012FE  0C03 0001                430  XnCompare1      CMPI.b  #%001, D3
00001302  6700 0152                431                  BEQ     Print1
00001306  6600 0002                432                  BNE     XnCompare2
0000130A                           433  
0000130A  0C03 0002                434  XnCompare2      CMPI.b  #%010, D3
0000130E  6700 0154                435                  BEQ     Print2
00001312  6600 0002                436                  BNE     XnCompare3
00001316                           437  
00001316  0C03 0003                438  XnCompare3      CMPI.b  #%011, D3
0000131A  6700 0156                439                  BEQ     Print3
0000131E  6600 0002                440                  BNE     XnCompare4
00001322                           441  
00001322  0C03 0004                442  XnCompare4      CMPI.b  #%100, D3
00001326  6700 0158                443                  BEQ     Print4
0000132A  6600 0002                444                  BNE     XnCompare5
0000132E                           445  
0000132E  0C03 0005                446  XnCompare5      CMPI.b  #%101, D3
00001332  6700 015A                447                  BEQ     Print5
00001336  6600 0002                448                  BNE     XnCompare6
0000133A                           449  
0000133A  0C03 0006                450  XnCompare6      CMPI.b  #%110, D3
0000133E  6700 015C                451                  BEQ     Print6
00001342  6600 0002                452                  BNE     XnCompare7
00001346                           453  
00001346  0C03 0007                454  XnCompare7      CMPI.b  #%111, D3
0000134A  6700 015E                455                  BEQ     Print7
0000134E  6600 0284                456                  BNE     disError
00001352                           457                  * FIXME we may need to use this for a bad command BNE XnCompare1
00001352                           458  
00001352                           459  
00001352                           460  *----------------------------------------------------------------
00001352                           461  *                          DISPLAYS                             |
00001352                           462  *----------------------------------------------------------------
00001352                           463  
00001352                           464  
00001352                           465            
00001352                           466  
00001352                           467  
00001352                           468  *---------------------MODE Displays----------------------
00001352                           469  
00001352                           470  
00001352                           471  *-------------------
00001352                           472  
00001352  4EB9 000013CA            473  disDnRegMode    JSR     disDnReg
00001358                           474  
00001358  4EB8 12F2                475                  JSR     XnCompare
0000135C                           476                  
0000135C  4287                     477                  CLR.L   D7
0000135E  4E75                     478                  RTS
00001360                           479  
00001360                           480  *-------------------
00001360                           481                      
00001360  4EB9 000013D8            482  disAnRegMode    JSR     disAnReg
00001366                           483  
00001366  4EB8 12F2                484                  JSR     XnCompare
0000136A                           485                  
0000136A  4287                     486                  CLR.L   D7
0000136C  4E75                     487                  RTS
0000136E                           488  
0000136E                           489  *-------------------
0000136E                           490  
0000136E  4EB9 000013E6            491  disAnIndMode    JSR     disLeftParen
00001374  4EB9 000013D8            492                  JSR     disAnReg
0000137A                           493                  
0000137A  4EB8 12F2                494                  JSR     XnCompare
0000137E                           495                  
0000137E  4287                     496                  CLR.L   D7
00001380                           497                  
00001380  4EB9 000013F4            498                  JSR     disRightParen
00001386                           499                  
00001386  4E75                     500                  RTS
00001388                           501                  
00001388                           502  *-------------------
00001388                           503  
00001388  4EB9 000013E6            504  disAnPosMode    JSR     disLeftParen
0000138E  4EB9 000013D8            505                  JSR     disAnReg
00001394                           506                  
00001394  4EB8 12F2                507                  JSR     XnCompare
00001398                           508                  
00001398  4287                     509                  CLR.L   D7
0000139A                           510                  
0000139A  4EB9 000013F4            511                  JSR     disRightParen
000013A0  4EB9 00001402            512                  JSR     displayPlus
000013A6                           513                  
000013A6  4E75                     514                  RTS
000013A8                           515  
000013A8                           516  *-------------------
000013A8                           517  
000013A8  4EB9 00001410            518  disAnPreMode    JSR     displayMinus
000013AE  4EB9 000013E6            519                  JSR     disLeftParen
000013B4  4EB9 000013D8            520                  JSR     disAnReg
000013BA                           521                  
000013BA  4EB8 12F2                522                  JSR     XnCompare
000013BE                           523                  
000013BE  4287                     524                  CLR.L   D7
000013C0                           525                  
000013C0  4EB9 000013F4            526                  JSR     disRightParen
000013C6                           527                  
000013C6  4287                     528                  CLR.L   D7
000013C8  4E75                     529                  RTS
000013CA                           530                  
000013CA                           531  *-------------------
000013CA                           532  
000013CA                           533  
000013CA                           534        
000013CA                           535                        
000013CA                           536  *----------------------Register Displays---------------------- 
000013CA                           537  
000013CA                           538  
000013CA                           539  *------------------Characters--------------------------------
000013CA                           540  
000013CA  43F9 0000161B            541  disDnReg        LEA     DnReg, A1
000013D0  103C 000E                542                  MOVE.B  #14, D0
000013D4  4E4F                     543                  TRAP    #15
000013D6  4E75                     544                  RTS
000013D8                           545  
000013D8                           546  
000013D8  43F9 0000161D            547  disAnReg        LEA     AnReg, A1
000013DE  103C 000E                548                  MOVE.B  #14, D0
000013E2  4E4F                     549                  TRAP    #15
000013E4  4E75                     550                  RTS
000013E6                           551  
000013E6  43F9 0000161F            552  disLeftParen    LEA     LeftParen, A1
000013EC  103C 000E                553                  MOVE.B  #14, D0
000013F0  4E4F                     554                  TRAP    #15
000013F2  4E75                     555                  RTS
000013F4                           556                  
000013F4  43F9 00001621            557  disRightParen   LEA     RightParen, A1
000013FA  103C 000E                558                  MOVE.B  #14, D0
000013FE  4E4F                     559                  TRAP    #15
00001400  4E75                     560                  RTS
00001402                           561                  
00001402                           562                
00001402  43F9 00001623            563  displayPlus     LEA     disPlus, A1
00001408  103C 000E                564                  MOVE.B  #14, D0
0000140C  4E4F                     565                  TRAP    #15
0000140E  4E75                     566                  RTS
00001410                           567                  
00001410  43F9 00001625            568  displayMinus    LEA     disMinus, A1
00001416  103C 000E                569                  MOVE.B  #14, D0
0000141A  4E4F                     570                  TRAP    #15
0000141C  4E75                     571                  RTS
0000141E                           572  
0000141E  43F9 00001627            573  displayComma    LEA     disComma, A1
00001424  103C 000E                574                  MOVE.B  #14, D0
00001428  4E4F                     575                  TRAP    #15
0000142A  4E75                     576                  RTS
0000142C                           577                  
0000142C  43F9 00001629            578  displaySpace    LEA     disSpace, A1
00001432  103C 000E                579                  MOVE.B  #14, D0
00001436  4E4F                     580                  TRAP    #15
00001438  4E75                     581                  RTS
0000143A                           582                  
0000143A  43F9 00001699            583  displayLine     LEA     disNewLine, A1
00001440  103C 0000                584                  MOVE.B  #0, D0
00001444  4E4F                     585                  TRAP    #15
00001446  4E75                     586                  RTS
00001448                           587                  
00001448                           588                  
00001448                           589  *-----------Numbers------------               
00001448  43F9 00001679            590  print0          LEA     disZero, A1
0000144E  103C 000E                591                  MOVE.B  #14, D0
00001452  4E4F                     592                  TRAP    #15
00001454  4E75                     593                  RTS
00001456                           594                  
00001456  43F9 0000167B            595  print1          LEA     disOne, A1
0000145C  103C 000E                596                  MOVE.B  #14, D0
00001460  4E4F                     597                  TRAP    #15
00001462  4E75                     598                  RTS
00001464                           599  
00001464  43F9 0000167D            600  print2          LEA     disTwo, A1
0000146A  103C 000E                601                  MOVE.B  #14, D0
0000146E  4E4F                     602                  TRAP    #15
00001470  4E75                     603                  RTS
00001472                           604  
00001472  43F9 0000167F            605  print3          LEA     disThree, A1
00001478  103C 000E                606                  MOVE.B  #14, D0
0000147C  4E4F                     607                  TRAP    #15
0000147E  4E75                     608                  RTS
00001480                           609  
00001480  43F9 00001681            610  print4          LEA     disFour, A1
00001486  103C 000E                611                  MOVE.B  #14, D0
0000148A  4E4F                     612                  TRAP    #15
0000148C  4E75                     613                  RTS
0000148E                           614  
0000148E  43F9 00001683            615  print5          LEA     disFive, A1
00001494  103C 000E                616                  MOVE.B  #14, D0
00001498  4E4F                     617                  TRAP    #15
0000149A  4E75                     618                  RTS
0000149C                           619  
0000149C  43F9 00001685            620  print6          LEA     disSix, A1
000014A2  103C 000E                621                  MOVE.B  #14, D0
000014A6  4E4F                     622                  TRAP    #15
000014A8  4E75                     623                  RTS
000014AA                           624  
000014AA  43F9 00001687            625  print7          LEA     disSeven, A1
000014B0  103C 000E                626                  MOVE.B  #14, D0
000014B4  4E4F                     627                  TRAP    #15
000014B6  4E75                     628                  RTS
000014B8                           629  
000014B8  43F9 00001689            630  print8          LEA     disEight, A1
000014BE  103C 000E                631                  MOVE.B  #14, D0
000014C2  4E4F                     632                  TRAP    #15
000014C4  4E75                     633                  RTS
000014C6                           634                  
000014C6  43F9 0000168B            635  print9          LEA     disNine, A1
000014CC  103C 000E                636                  MOVE.B  #14, D0
000014D0  4E4F                     637                  TRAP    #15
000014D2  4E75                     638                  RTS
000014D4                           639  
000014D4  43F9 0000168D            640  printA          LEA     disA, A1
000014DA  103C 000E                641                  MOVE.B  #14, D0
000014DE  4E4F                     642                  TRAP    #15
000014E0  4E75                     643                  RTS
000014E2                           644  
000014E2  43F9 0000168F            645  printB          LEA     disB, A1
000014E8  103C 000E                646                  MOVE.B  #14, D0
000014EC  4E4F                     647                  TRAP    #15
000014EE  4E75                     648                  RTS
000014F0                           649  
000014F0  43F9 00001691            650  printC          LEA     disC, A1
000014F6  103C 000E                651                  MOVE.B  #14, D0
000014FA  4E4F                     652                  TRAP    #15
000014FC  4E75                     653                  RTS
000014FE                           654  
000014FE  43F9 00001693            655  printD          LEA     disD, A1
00001504  103C 000E                656                  MOVE.B  #14, D0
00001508  4E4F                     657                  TRAP    #15
0000150A  4E75                     658                  RTS
0000150C                           659  
0000150C  43F9 00001695            660  printE          LEA     disE, A1
00001512  103C 000E                661                  MOVE.B  #14, D0
00001516  4E4F                     662                  TRAP    #15
00001518  4E75                     663                  RTS
0000151A                           664  
0000151A  43F9 00001697            665  printF          LEA     disF, A1
00001520  103C 000E                666                  MOVE.B  #14, D0
00001524  4E4F                     667                  TRAP    #15
00001526  4E75                     668                  RTS
00001528                           669  
00001528  43F9 00001619            670  printHashTag    LEA     hashTag,A1
0000152E  103C 000E                671                  MOVE.B  #14, D0
00001532  4E4F                     672                  TRAP    #15
00001534  4E75                     673                  RTS
00001536                           674  
00001536                           675  *----------OpCode-----------------                
00001536  43F9 000015E8            676  disMoveByte     LEA     MOVEByteDis, A1
0000153C  103C 000E                677                  MOVE.B  #14, D0
00001540  4E4F                     678                  TRAP    #15
00001542  4E75                     679                  RTS                
00001544                           680  
00001544                           681  
00001544  43F9 000015F0            682  disMoveWord     LEA     MOVEWordDis, A1
0000154A  103C 000E                683                  MOVE.B  #14, D0
0000154E  4E4F                     684                  TRAP    #15
00001550  4E75                     685                  RTS
00001552                           686  
00001552  43F9 000015F8            687  disMoveLong     LEA     MOVELongDis, A1
00001558  103C 000E                688                  MOVE.B  #14, D0
0000155C  4E4F                     689                  TRAP    #15
0000155E  4E75                     690                  RTS
00001560                           691                  
00001560                           692  disAsymmShift
00001560  43F9 00001600            693                  LEA     AsymmShift, A1
00001566  103C 000E                694                  MOVE.B  #14, D0
0000156A  4E4F                     695                  TRAP    #15
0000156C  4E75                     696                  RTS
0000156E                           697  disLogicShift
0000156E  43F9 00001603            698                  LEA     logicShift, A1
00001574  103C 000E                699                  MOVE.B  #14, D0
00001578  4E4F                     700                  TRAP    #15
0000157A  4E75                     701                  RTS
0000157C                           702  
0000157C                           703  disRotateShift                
0000157C  43F9 00001606            704                  LEA     rotateShift, A1
00001582  103C 000E                705                  MOVE.B  #14, D0
00001586  4E4F                     706                  TRAP    #15
00001588  4E75                     707                  RTS                
0000158A                           708                  
0000158A                           709                  
0000158A                           710                  
0000158A                           711  
0000158A                           712  *-----------Sizes------------------  
0000158A  43F9 00001609            713  disByteSize     LEA     byteSize, A1
00001590  103C 000E                714                  Move.B  #14, D0
00001594  4E4F                     715                  Trap    #15
00001596  4E75                     716                  RTS
00001598                           717  
00001598  43F9 0000160D            718  disWordSize     LEA     wordSize, A1
0000159E  103C 000E                719                  Move.B  #14, D0
000015A2  4E4F                     720                  Trap    #15
000015A4  4E75                     721                  RTS
000015A6                           722  
000015A6  43F9 00001611            723  disLongSize     LEA     longSize, A1
000015AC  103C 000E                724                  Move.B  #14, D0
000015B0  4E4F                     725                  Trap    #15
000015B2  4E75                     726                  RTS
000015B4                           727  
000015B4                           728  
000015B4                           729  *-----------Directions------------------         
000015B4  43F9 00001615            730  disLeftDir      LEA     leftDir, A1
000015BA  103C 000E                731                  Move.B  #14, D0
000015BE  4E4F                     732                  Trap    #15
000015C0  6000 FCCC                733                  BRA     printDirRet
000015C4                           734  
000015C4  43F9 00001617            735  disRightDir     LEA     rightDir, A1
000015CA  103C 000E                736                  Move.B  #14, D0
000015CE  4E4F                     737                  Trap    #15
000015D0  6000 FCBC                738                  BRA     printDirRet
000015D4                           739  
000015D4                           740  
000015D4                           741  *-----------Error------------------         
000015D4  43F9 000015E2            742  disError        LEA     Error, A1
000015DA  103C 000E                743                  Move.B  #14, D0
000015DE  4E4F                     744                  Trap    #15
000015E0  4E75                     745                  RTS          
000015E2                           746           
000015E2                           747  *----------------------------------------------------------------
000015E2                           748  *                         String constants                      |
000015E2                           749  *----------------------------------------------------------------
000015E2                           750  
000015E2                           751  * Put variables and constants here
000015E2= 65 72 72 6F 72 00        752  Error DC.B  'error', 0
000015E8                           753  
000015E8= 4D 4F 56 45 2E 42 ...    754  MOVEByteDis     DC.B    'MOVE.B ', 0
000015F0= 4D 4F 56 45 2E 57 ...    755  MOVEWordDis     DC.B    'MOVE.W ', 0   
000015F8= 4D 4F 56 45 2E 4C ...    756  MOVELongDis     DC.B    'MOVE.L ', 0
00001600                           757  
00001600= 41 53 00                 758  AsymmShift      DC.B    'AS', 0
00001603                           759  
00001603= 4C 53 00                 760  logicShift      DC.B    'LS', 0
00001606                           761  
00001606= 52 4F 00                 762  rotateShift     DC.B    'RO', 0
00001609                           763  
00001609                           764  
00001609                           765  
00001609= 2E 42 20 00              766  byteSize        DC.B    '.B ', 0
0000160D= 2E 57 20 00              767  wordSize        DC.B    '.W ', 0
00001611= 2E 4C 20 00              768  longSize        DC.B    '.L ', 0
00001615                           769  
00001615= 4C 00                    770  leftDir         DC.B    'L', 0
00001617= 52 00                    771  rightDir        DC.B    'R', 0
00001619                           772  
00001619= 23 00                    773  hashtag         DC.B    '#', 0
0000161B                           774  
0000161B= 44 00                    775  DnReg           DC.B    'D', 0
0000161D= 41 00                    776  AnReg           DC.B    'A', 0
0000161F= 28 00                    777  LeftParen       DC.B    '(', 0
00001621= 29 00                    778  RightParen      DC.B    ')', 0
00001623= 2B 00                    779  disPlus         DC.B    '+', 0
00001625= 2D 00                    780  disMinus        DC.B    '-', 0
00001627= 2C 00                    781  disComma        DC.B    ',', 0
00001629= 20 00                    782  disSpace        DC.B    ' ', 0
0000162B= 49 64 65 6E 74 69 ...    783  ASKSTART        DC.B    'Identify the starting memory location: ', 0
00001653= 49 64 65 6E 74 69 ...    784  ASKEND          DC.B    'Identify the ending memory location: ', 0
00001679                           785  
00001679                           786  *numbers
00001679= 30 00                    787  disZero         DC.B    '0', 0
0000167B= 31 00                    788  disOne          DC.B    '1', 0
0000167D= 32 00                    789  disTwo          DC.B    '2', 0
0000167F= 33 00                    790  disThree        DC.B    '3', 0
00001681= 34 00                    791  disFour         DC.B    '4', 0
00001683= 35 00                    792  disFive         DC.B    '5', 0
00001685= 36 00                    793  disSix          DC.B    '6', 0
00001687= 37 00                    794  disSeven        DC.B    '7', 0
00001689= 38 00                    795  disEight        DC.B    '8', 0
0000168B= 39 00                    796  disNine         DC.B    '9', 0
0000168D                           797  
0000168D= 41 00                    798  disA            DC.B    'A', 0
0000168F= 42 00                    799  disB            DC.B    'B', 0
00001691= 43 00                    800  disC            DC.B    'C', 0
00001693= 44 00                    801  disD            DC.B    'D', 0
00001695= 45 00                    802  disE            DC.B    'E', 0
00001697= 46 00                    803  disF            DC.B    'F', 0
00001699                           804  
00001699= 00                       805  disNewLine      DC.B    '', 0
0000169A                           806   
0000169A                           807      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANREG               161D
ASKEND              1653
ASKSTART            162B
ASYMMSHIFT          1600
ASYSHIFTGROUP       121C
ASYSHIFTRET         122E
BITSHIFTGROUP       11AA
BITSHIFTTYPE        11AE
BITSHIFTTYPECOMPARE  11E0
BYTESIZE            1609
CODE0000            108A
CODE0001            108E
CODE0010            1092
CODE0011            1096
CODE0100            109A
CODE0101            109E
CODE0110            10A2
CODE0111            10A6
CODE1000            10AA
CODE1001            10AE
CODE1010            10B2
CODE1011            10B6
CODE1100            10B8
CODE1101            10BC
CODE1110            10C0
CODE1111            10C4
DISA                168D
DISANINDMODE        136E
DISANPOSMODE        1388
DISANPREMODE        13A8
DISANREG            13D8
DISANREGMODE        1360
DISASYMMSHIFT       1560
DISB                168F
DISBYTESIZE         158A
DISC                1691
DISCOMMA            1627
DISD                1693
DISDNREG            13CA
DISDNREGMODE        1352
DISE                1695
DISEIGHT            1689
DISERROR            15D4
DISF                1697
DISFIVE             1683
DISFOUR             1681
DISLEFTDIR          15B4
DISLEFTPAREN        13E6
DISLOGICSHIFT       156E
DISLONGSIZE         15A6
DISMINUS            1625
DISMOVEBYTE         1536
DISMOVELONG         1552
DISMOVEWORD         1544
DISNEWLINE          1699
DISNINE             168B
DISONE              167B
DISPLAYCOMMA        141E
DISPLAYLINE         143A
DISPLAYMINUS        1410
DISPLAYPLUS         1402
DISPLAYSPACE        142C
DISPLUS             1623
DISRIGHTDIR         15C4
DISRIGHTPAREN       13F4
DISROTATESHIFT      157C
DISSEVEN            1687
DISSIX              1685
DISSPACE            1629
DISTHREE            167F
DISTWO              167D
DISWORDSIZE         1598
DISZERO             1679
DNREG               161B
ENDPT               55
ERROR               15E2
EXAMPLE             E00F
HASHTAG             1619
JMP_TABLE           102A
LEFTDIR             1615
LEFTPAREN           161F
LOGICSHIFT          1603
LOGSHIFTGROUP       11F8
LOGSHIFTRET         121C
LONGSIZE            1611
MODECOMPARE         12AE
MODECOMPARE1        12BA
MODECOMPARE2        12C6
MODECOMPARE3        12D2
MODECOMPARE4        12DE
MODECOMPARE5        12EA
MOVEBYTE            10C8
MOVEBYTEDIS         15E8
MOVEDESDECODE       1172
MOVEDESMODEDECODE   118A
MOVEDESXNDECODE     1176
MOVELONG            1118
MOVELONGDIS         15F8
MOVESRCDECODE       1140
MOVESRCMODEDECODE   1158
MOVESRCXNDECODE     1144
MOVEWORD            10F0
MOVEWORDDIS         15F0
PRINT0              1448
PRINT1              1456
PRINT2              1464
PRINT3              1472
PRINT4              1480
PRINT5              148E
PRINT6              149C
PRINT7              14AA
PRINT8              14B8
PRINT9              14C6
PRINTA              14D4
PRINTB              14E2
PRINTC              14F0
PRINTD              14FE
PRINTDIRECTION      1282
PRINTDIRRET         128E
PRINTE              150C
PRINTF              151A
PRINTHASHTAG        1528
PRINTIMMDATA        1246
PRINTREGISTER       1254
PRINTSHIFT          1282
PRINTSHIFTREGNUMBER  1262
PRINTSIZE           1290
PRINTSIZERET        12AC
RIGHTDIR            1617
RIGHTPAREN          1621
ROTATESHIFT         1606
ROTSHIFTGROUP       122E
ROTSHIFTRET         123A
SHIFT10             A
SHIFT12             C
SHIFT13             D
SHIFTGRPCOUNT       123A
STACK               A000
START               1000
STARTPT             AA
TEMP                400
WORDSIZE            160D
XNCOMPARE           12F2
XNCOMPARE1          12FE
XNCOMPARE2          130A
XNCOMPARE3          1316
XNCOMPARE4          1322
XNCOMPARE5          132E
XNCOMPARE6          133A
XNCOMPARE7          1346
