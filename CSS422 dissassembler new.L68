00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/20/2014 9:29:05 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :CSS422 Project
00000000                             3  * Written by :Nicholas Abel and Julio Perez
00000000                             4  * Date       :November 7, 2014
00000000                             5  * Description:Disassembler
00000000                             6  *-----------------------------------------------------------
00000000  =000000AA                  7  STARTPT   EQU $AA     *starting point
00000000  =00000055                  8  ENDPT     EQU $55     *ending point
00000000  =00000400                  9  temp      EQU $400    *location to work at
00000000  =0000A000                 10  stack     EQU $A000
00000000  =00001217                 11  example   EQU %0001001000010111    * I made up bits 0 to 11      
00000000  =0000000C                 12  shift12   EQU 12                   * Shift 12 bits 
00000000  =0000000A                 13  shift10   EQU 10                   * Shift 10 bits
00000000  =0000000D                 14  shift13   EQU 13 
00000000                            15  
00000000                            16  
00001000                            17          ORG    $1000
00001000                            18  START:                          
00001000                            19  *        LEA     ASKSTART, A1    *message to ask user for input
00001000                            20  *        MOVE.B  #13, D0         *rule 13 allows print without line feed and carriage return if neccesary
00001000                            21  *        TRAP    #15             *Display A1 message
00001000                            22  *        
00001000                            23  *        MOVE.B  #4, D0          *input rule saves to D1
00001000                            24  *        TRAP    #15             *initiate read from keyboard
00001000                            25  *        
00001000                            26  *        MOVE.B  D1, STARTPT        *save number to NUM1
00001000                            27  *        
00001000                            28  *        LEA     ASKEND, A1      *ask about ending memory location
00001000                            29  *        MOVE.B  #13, D0         
00001000                            30  *        TRAP    #15             *display A1
00001000                            31  *        
00001000                            32  *        MOVE.B  #4, D0          *
00001000                            33  *        TRAP    #15
00001000                            34  *        
00001000                            35  *        MOVE.B  D1, ENDPT         *ending memory location stored
00001000                            36  
00001000  4FF9 0000A000             37          LEA     stack,SP        *Load the SP
00001006  41F9 00001024             38          LEA     jmp_table,A0    *Index into the table
0000100C                            39  
0000100C  4280                      40          CLR.L   D0              *Zero it
0000100E  4281                      41          CLR.L   D1
00001010                            42   
00001010                            43  *Get word size element
00001010  3C3C 1217                 44              MOVE.W      #example,D6     *variable put in place        
00001014  3006                      45              MOVE.W      D6, D0
00001016  123C 000C                 46              MOVE.B      #shift12,D1       *Shift 12 bits to the right  
0000101A  E268                      47              LSR.W       D1,D0           *Move the bits
0000101C  C0FC 0006                 48              MULU        #6,D0       *Form offset     
00001020                            49  
00001020  4EB0 0000                 50              JSR         0(A0,D0)    *Jump indirect with index
00001024                            51  * check read pointer location against EnDPt if end done
00001024                            52  * otherwise move back into read sub routine
00001024                            53                      
00001024                            54  
00001024                            55  *----------------------------------------------------------------
00001024                            56  *                       OpCode ID Table                         |
00001024                            57  *----------------------------------------------------------------
00001024                            58  
00001024                            59  
00001024                            60  jmp_table  
00001024                            61  
00001024  4EF9 00001084             62                 JMP         code0000
0000102A                            63  
0000102A  4EF9 00001088             64                 JMP         code0001
00001030                            65  
00001030  4EF9 0000108C             66                 JMP         code0010
00001036                            67  
00001036  4EF9 00001090             68                 JMP         code0011
0000103C                            69  
0000103C  4EF9 00001094             70                 JMP         code0100
00001042                            71  
00001042  4EF9 00001098             72                 JMP         code0101
00001048                            73  
00001048  4EF9 0000109C             74                 JMP         code0110
0000104E                            75  
0000104E  4EF9 000010A0             76                 JMP         code0111
00001054                            77  
00001054  4EF9 000010A4             78                 JMP         code1000
0000105A                            79  
0000105A  4EF9 000010A8             80                 JMP         code1001
00001060                            81  
00001060  4EF9 000010AC             82                 JMP         code1010
00001066                            83  
00001066  4EF9 000010B0             84                 JMP         code1011
0000106C                            85  
0000106C  4EF9 000010B2             86                 JMP         code1100
00001072                            87  
00001072  4EF9 000010B6             88                 JMP         code1101
00001078                            89  
00001078  4EF9 000010BA             90                 JMP         code1110
0000107E                            91  
0000107E  4EF9 000010BE             92                 JMP         code1111
00001084                            93  
00001084                            94  *subroutines from jump table
00001084                            95  
00001084                            96  
00001084  4E72 2700                 97  code0000       STOP        #$2700
00001088                            98  
00001088  6000 0038                 99  code0001       BRA         MoveByte
0000108C                           100  
0000108C  4E72 2700                101  code0010       STOP        #$2700
00001090                           102  
00001090  4E72 2700                103  code0011       STOP        #$2700
00001094                           104  
00001094  4E72 2700                105  code0100       STOP        #$2700
00001098                           106  
00001098  4E72 2700                107  code0101       STOP        #$2700
0000109C                           108  
0000109C  4E72 2700                109  code0110       STOP        #$2700
000010A0                           110  
000010A0  4E72 2700                111  code0111       STOP        #$2700
000010A4                           112  
000010A4  4E72 2700                113  code1000       STOP        #$2700
000010A8                           114  
000010A8  4E72 2700                115  code1001       STOP        #$2700
000010AC                           116  
000010AC  4E72 2700                117  code1010       STOP        #$2700
000010B0                           118   
000010B0  60FE                     119  code1011       BRA        code1011
000010B2                           120  
000010B2  4E72 2700                121  code1100       STOP        #$2700
000010B6                           122  
000010B6  4E72 2700                123  code1101       STOP        #$2700
000010BA                           124  
000010BA  4E72 2700                125  code1110       STOP        #$2700
000010BE                           126  
000010BE  4E72 2700                127  code1111       STOP        #$2700
000010C2                           128  
000010C2                           129   
000010C2                           130  
000010C2                           131  *----------------------------------------------------------------
000010C2                           132  *                OpCode Breakdown Methods                       |
000010C2                           133  *----------------------------------------------------------------
000010C2                           134  
000010C2                           135  *--------------MOVE.B Decode-----------------------------
000010C2                           136  
000010C2  4EB9 000013BE            137  MoveByte        JSR     disMoveByte
000010C8                           138  
000010C8                           139  *continue searching through the machine code for source then destination
000010C8                           140  *because of writing format
000010C8  4280                     141                  CLR.L   D0
000010CA  4281                     142                  CLR.L   D1
000010CC  3006                     143                  MOVE.W  D6, D0     *reallocate example to reconfigure for next step
000010CE  4EB9 0000112E            144                  JSR     RegModeXnDecode * src decode
000010D4  4EB9 00001324            145                  JSR     displayComma
000010DA  4EB9 00001332            146                  JSR     displaySpace
000010E0  4EB9 000010F0            147                  JSR     DesMoveDecode   *destination decode
000010E6  4EB9 00001340            148                  JSR     displayLine 
000010EC  4E71                     149                  NOP
000010EE  4E75                     150                  RTS
000010F0                           151           
000010F0  6000 0002                152  DesMoveDecode   BRA     DesModeDecode        
000010F4                           153          
000010F4  1E3C 0001                154  DesModeDecode   MOVE.B  #%1, D7  *set flag for destination    
000010F8  3006                     155                  MOVE.W  D6, D0
000010FA  123C 000C                156                  MOVE.B  #shift12, D1
000010FE  E278                     157                  ROR.W   D1, D0
00001100  123C 000A                158                  MOVE.B  #shift10, D1
00001104                           159                  
00001104  E268                     160                  LSR.W   D1, D0
00001106                           161                  *must isolate the mode
00001106  E658                     162                  ROR.W   #3, D0
00001108  123C 000D                163                  MOVE.B  #shift13, D1
0000110C  E268                     164                  LSR.W   D1, D0       *mode isolated
0000110E                           165                  
0000110E  4EB9 00001154            166                  JSR     ModeCompare
00001114  4E71                     167                  NOP
00001116  4E75                     168                  RTS *done here
00001118                           169  
00001118                           170  
00001118  3006                     171  DesXnDecode     MOVE.W  D6,D0
0000111A  123C 000C                172                  MOVE.B  #shift12, D1
0000111E  E278                     173                  ROR.W   D1, D0
00001120  123C 000D                174                  MOVE.B  #shift13, D1
00001124                           175                  
00001124  E268                     176                  LSR.W   D1, D0    *isolates Xn
00001126                           177                  
00001126  4EB9 00001190            178                  JSR      XnCompare
0000112C  4E75                     179                  RTS
0000112E                           180  
0000112E                           181  *----------------------------------------------------------------
0000112E                           182  *                         Decode Methods                        |
0000112E                           183  *----------------------------------------------------------------
0000112E                           184  
0000112E  6000 0002                185  RegModeXnDecode      BRA ModeDecode
00001132                           186  
00001132                           187          
00001132  3006                     188  ModeDecode      MOVE.W  D6, D0
00001134  EC58                     189                  ROR.W   #6, D0
00001136  123C 000A                190                  MOVE.B  #shift10,D1       *Shift 10 bits to the right  
0000113A                           191  
0000113A  E268                     192                  LSR.W   D1,D0           *Move the bits
0000113C                           193                  
0000113C  E648                     194                  LSR.W   #3, D0   *D2 now has the mode
0000113E  4EB9 00001154            195                  JSR     ModeCompare
00001144  4E75                     196                  RTS    
00001146                           197  
00001146  3006                     198  XnDecode        MOVE.W  D6, D0
00001148  E658                     199                  ROR.W   #3, D0       * last three bits to isolate Xn
0000114A                           200                  
0000114A  123C 000D                201                  MOVE.B  #shift13, D1
0000114E  E268                     202                  LSR.W   D1,D0        *format is good last three bits in least signifant location
00001150  6000 003E                203                  Bra     XnCompare
00001154                           204  
00001154                           205  
00001154                           206  
00001154                           207  
00001154                           208  *----------------------------------------------------------------
00001154                           209  *                         Comparisons                           |
00001154                           210  *----------------------------------------------------------------
00001154                           211  
00001154                           212  
00001154                           213  *------------------Mode Comparisons -----------------------------------------
00001154                           214  
00001154  0C00 0000                215  ModeCompare     CMPI.B  #%000, D0 * last three are zeroes
00001158  6700 00E6                216                  BEQ     disDnRegMode       *jump to subroutine for Data register Source
0000115C  6600 0002                217                  BNE     ModeCompare1              *FIXME: needs to have not equal Branch here
00001160                           218                  
00001160  0C00 0001                219  ModeCompare1    CMPI.B  #%001, D0
00001164  6700 00EC                220                  BEQ     disAnRegMode
00001168  6600 0002                221                  BNE     ModeCompare2
0000116C                           222                  
0000116C  0C00 0002                223  ModeCompare2    CMPI.B  #%010, D0
00001170  6700 00F2                224                  BEQ     disAnIndMode
00001174  6600 0002                225                  BNE     ModeCompare3
00001178                           226                  
00001178  0C00 0003                227  ModeCompare3    CMPI.B  #%011, D0
0000117C                           228                  *BEQ    disAnIndPostMode
0000117C  6600 0002                229                  BNE     ModeCompare4
00001180                           230  
00001180  0C00 0004                231  ModeCompare4    CMPI.B  #%100, D0
00001184                           232                  *BEQ    disAnIndPreMode
00001184  6600 0002                233                  BNE     ModeCompare5
00001188                           234                  
00001188  0C00 0007                235  ModeCompare5    CMPI.B  #%111, D0
0000118C                           236                  *BEQ    disEAmode
0000118C  6600 023E                237                  BNE     disError
00001190                           238  
00001190                           239               
00001190                           240  
00001190                           241  *---------------------Register Compare---------------------                
00001190  0C00 0000                242  XnCompare       CMPI.b  #%000, D0
00001194  6700 01B8                243                  BEQ     XnIs0
00001198  6600 0002                244                  BNE     XnCompare1
0000119C                           245                  
0000119C  0C00 0001                246  XnCompare1      CMPI.b  #%001, D0
000011A0  6700 01BA                247                  BEQ     XnIs1
000011A4  6600 0002                248                  BNE     XnCompare2
000011A8                           249  
000011A8  0C00 0002                250  XnCompare2      CMPI.b  #%010, D0
000011AC  6700 01BC                251                  BEQ     XnIs2
000011B0  6600 0002                252                  BNE     XnCompare3
000011B4                           253  
000011B4  0C00 0003                254  XnCompare3      CMPI.b  #%011, D0
000011B8  6700 01BE                255                  BEQ     XnIs3
000011BC  6600 0002                256                  BNE     XnCompare4
000011C0                           257  
000011C0  0C00 0004                258  XnCompare4      CMPI.b  #%100, D0
000011C4  6700 01C0                259                  BEQ     XnIs4
000011C8  6600 0002                260                  BNE     XnCompare5
000011CC                           261  
000011CC  0C00 0005                262  XnCompare5      CMPI.b  #%101, D0
000011D0  6700 01C2                263                  BEQ     XnIs5
000011D4  6600 0002                264                  BNE     XnCompare6
000011D8                           265  
000011D8  0C00 0006                266  XnCompare6      CMPI.b  #%110, D0
000011DC  6700 01C4                267                  BEQ     XnIs6
000011E0  6600 0002                268                  BNE     XnCompare7
000011E4                           269  
000011E4  0C00 0007                270  XnCompare7      CMPI.b  #%111, D0
000011E8  6700 01C6                271                  BEQ     XnIs7
000011EC  6600 01DE                272                  BNE     disError
000011F0                           273                  * FIXME we may need to use this for a bad command BNE XnCompare1
000011F0                           274  
000011F0                           275  
000011F0                           276  *----------------------------------------------------------------
000011F0                           277  *                          DISPLAYS                             |
000011F0                           278  *----------------------------------------------------------------
000011F0                           279  
000011F0                           280  
000011F0                           281  
000011F0                           282  
000011F0                           283  *---------------------MODE ShortCuts----------------------
000011F0                           284  
000011F0  4EB8 1146                285  DnSrcDisXn       JSR     XnDecode
000011F4  6000 0058                286                   Bra     disDnRegBack
000011F8                           287          
000011F8  4EB8 1118                288  DnDesDisXn       JSR     DesXnDecode
000011FC  6000 0050                289                   Bra     disDnRegBack
00001200                           290                      
00001200  4EB8 1146                291  AnSrcDisXn       JSR     XnDecode
00001204  6000 005A                292                   Bra     disAnRegBack
00001208                           293          
00001208  4EB8 1118                294  AnDesDisXn       JSR     DesXnDecode
0000120C  6000 0052                295                   Bra     disAnRegBack
00001210                           296  
00001210  4EB8 1146                297  AnIndSrcDisXn    JSR     XnDecode
00001214  6000 0062                298                   Bra     disAnIndBack
00001218                           299          
00001218  4EB8 1118                300  AnIndDesDisXn    JSR     DesXnDecode
0000121C  6000 005A                301                   Bra     disAnIndBack
00001220                           302  
00001220  4EB8 1146                303  AnPreSrcDisXn    JSR     XnDecode
00001224  6000 009E                304                   Bra     disAnPreBack
00001228                           305          
00001228  4EB8 1118                306  AnPreDesDisXn    JSR     DesXnDecode
0000122C  6000 0096                307                   Bra     disAnPreBack
00001230                           308  
00001230                           309  
00001230  4EB8 1146                310  AnPosSrcDisXn    JSR     XnDecode
00001234  6000 0060                311                   Bra     disAnPosBack
00001238                           312          
00001238  4EB8 1118                313  AnPosDesDisXn    JSR     DesXnDecode
0000123C  6000 0058                314                   Bra     disAnPosBack                
00001240                           315  
00001240                           316  
00001240                           317  *---------------------MODE Displays----------------------
00001240                           318  
00001240                           319  
00001240                           320  *-------------------
00001240                           321  
00001240  4EB9 000012D0            322  disDnRegMode    JSR     disDnReg
00001246                           323  
00001246  0C07 0001                324                  CMPI.B  #%1, D7
0000124A  67AC                     325                  BEQ     DnDesDisXn
0000124C  66A2                     326                  BNE     DnSrcDisXn
0000124E                           327                  
0000124E  4287                     328  disDnRegBack    CLR.L   D7
00001250  4E75                     329                  RTS
00001252                           330  
00001252                           331  *-------------------
00001252                           332                      
00001252  4EB9 000012DE            333  disAnRegMode    JSR     disAnReg
00001258                           334  
00001258  0C07 0001                335                  CMPI.B  #%1, D7
0000125C  67AA                     336                  BEQ     AnDesDisXn
0000125E  66A0                     337                  BNE     AnSrcDisXn
00001260                           338                  
00001260  4287                     339  disAnRegBack    CLR.L   D7
00001262  4E75                     340                  RTS
00001264                           341  
00001264                           342  *-------------------
00001264                           343  
00001264  4EB9 000012EC            344  disAnIndMode    JSR     disLeftParen
0000126A  4EB9 000012DE            345                  JSR     disAnReg
00001270                           346                  
00001270  0C07 0001                347                  CMPI.B  #%1, D7
00001274  67A2                     348                  BEQ     AnIndDesDisXn
00001276  6698                     349                  BNE     AnIndSrcDisXn
00001278                           350                  
00001278  4287                     351  disAnIndBack    CLR.L   D7
0000127A                           352                  
0000127A  4EB9 000012FA            353                  JSR     disRightParen
00001280                           354                  
00001280  4E75                     355                  RTS
00001282                           356                  
00001282                           357  *-------------------
00001282                           358  
00001282  4EB9 000012EC            359  disAnPosMode    JSR     disLeftParen
00001288  4EB9 000012DE            360                  JSR     disAnReg
0000128E                           361                  
0000128E  0C07 0001                362                  CMPI.B  #%1, D7
00001292  67A4                     363                  BEQ     AnPosDesDisXn
00001294  669A                     364                  BNE     AnPosSrcDisXn
00001296                           365                  
00001296  4287                     366  disAnPosBack    CLR.L   D7
00001298                           367                  
00001298  4EB9 000012FA            368                  JSR     disRightParen
0000129E  4EB9 00001308            369                  JSR     displayPlus
000012A4                           370                  
000012A4  4E75                     371                  RTS
000012A6                           372  
000012A6                           373  *-------------------
000012A6                           374  
000012A6  4EB9 00001316            375  disAnPreMode    JSR     displayMinus
000012AC  4EB9 000012EC            376                  JSR     disLeftParen
000012B2  4EB9 000012DE            377                  JSR     disAnReg
000012B8                           378                  
000012B8  0C07 0001                379                  CMPI.B  #%1, D7
000012BC  6700 FF6A                380                  BEQ     AnPreDesDisXn
000012C0  6600 FF5E                381                  BNE     AnPreSrcDisXn
000012C4                           382                  
000012C4  4287                     383  disAnPreBack    CLR.L   D7
000012C6                           384                  
000012C6  4EB9 000012FA            385                  JSR     disRightParen
000012CC                           386                  
000012CC  4287                     387                  CLR.L   D7
000012CE  4E75                     388                  RTS
000012D0                           389                  
000012D0                           390  *-------------------
000012D0                           391  
000012D0                           392  
000012D0                           393        
000012D0                           394                        
000012D0                           395  *----------------------Register Displays---------------------- 
000012D0                           396  
000012D0                           397  
000012D0                           398  *------------------Characters--------------------------------
000012D0                           399  
000012D0  43F9 000013F8            400  disDnReg        LEA     DnReg, A1
000012D6  103C 000E                401                  MOVE.B  #14, D0
000012DA  4E4F                     402                  TRAP    #15
000012DC  4E75                     403                  RTS
000012DE                           404  
000012DE                           405  
000012DE  43F9 000013FA            406  disAnReg        LEA     AnReg, A1
000012E4  103C 000E                407                  MOVE.B  #14, D0
000012E8  4E4F                     408                  TRAP    #15
000012EA  4E75                     409                  RTS
000012EC                           410  
000012EC  43F9 000013FC            411  disLeftParen    LEA     LeftParen, A1
000012F2  103C 000E                412                  MOVE.B  #14, D0
000012F6  4E4F                     413                  TRAP    #15
000012F8  4E75                     414                  RTS
000012FA                           415                  
000012FA  43F9 000013FE            416  disRightParen   LEA     RightParen, A1
00001300  103C 000E                417                  MOVE.B  #14, D0
00001304  4E4F                     418                  TRAP    #15
00001306  4E75                     419                  RTS
00001308                           420                  
00001308                           421                
00001308  43F9 00001400            422  displayPlus     LEA     disPlus, A1
0000130E  103C 000E                423                  MOVE.B  #14, D0
00001312  4E4F                     424                  TRAP    #15
00001314  4E75                     425                  RTS
00001316                           426                  
00001316  43F9 00001402            427  displayMinus    LEA     disMinus, A1
0000131C  103C 000E                428                  MOVE.B  #14, D0
00001320  4E4F                     429                  TRAP    #15
00001322  4E75                     430                  RTS
00001324                           431  
00001324  43F9 00001404            432  displayComma    LEA     disComma, A1
0000132A  103C 000E                433                  MOVE.B  #14, D0
0000132E  4E4F                     434                  TRAP    #15
00001330  4E75                     435                  RTS
00001332                           436                  
00001332  43F9 00001406            437  displaySpace    LEA     disSpace, A1
00001338  103C 000E                438                  MOVE.B  #14, D0
0000133C  4E4F                     439                  TRAP    #15
0000133E  4E75                     440                  RTS
00001340                           441                  
00001340  43F9 00001466            442  displayLine     LEA     disNewLine, A1
00001346  103C 0000                443                  MOVE.B  #0, D0
0000134A  4E4F                     444                  TRAP    #15
0000134C  4E75                     445                  RTS
0000134E                           446                  
0000134E                           447                  
0000134E                           448  *-----------Numbers------------               
0000134E  43F9 00001456            449  XnIs0           LEA     disZero, A1
00001354  103C 000E                450                  MOVE.B  #14, D0
00001358  4E4F                     451                  TRAP    #15
0000135A  4E75                     452                  RTS
0000135C                           453                  
0000135C  43F9 00001458            454  XnIs1           LEA     disOne, A1
00001362  103C 000E                455                  MOVE.B  #14, D0
00001366  4E4F                     456                  TRAP    #15
00001368  4E75                     457                  RTS
0000136A                           458  
0000136A  43F9 0000145A            459  XnIs2           LEA     disTwo, A1
00001370  103C 000E                460                  MOVE.B  #14, D0
00001374  4E4F                     461                  TRAP    #15
00001376  4E75                     462                  RTS
00001378                           463  
00001378  43F9 0000145C            464  XnIs3           LEA     disThree, A1
0000137E  103C 000E                465                  MOVE.B  #14, D0
00001382  4E4F                     466                  TRAP    #15
00001384  4E75                     467                  RTS
00001386                           468  
00001386  43F9 0000145E            469  XnIs4           LEA     disFour, A1
0000138C  103C 000E                470                  MOVE.B  #14, D0
00001390  4E4F                     471                  TRAP    #15
00001392  4E75                     472                  RTS
00001394                           473  
00001394  43F9 00001460            474  XnIs5           LEA     disFive, A1
0000139A  103C 000E                475                  MOVE.B  #14, D0
0000139E  4E4F                     476                  TRAP    #15
000013A0  4E75                     477                  RTS
000013A2                           478  
000013A2  43F9 00001462            479  XnIs6           LEA     disSix, A1
000013A8  103C 000E                480                  MOVE.B  #14, D0
000013AC  4E4F                     481                  TRAP    #15
000013AE  4E75                     482                  RTS
000013B0                           483  
000013B0  43F9 00001464            484  XnIs7           LEA     disSeven, A1
000013B6  103C 000E                485                  MOVE.B  #14, D0
000013BA  4E4F                     486                  TRAP    #15
000013BC  4E75                     487                  RTS
000013BE                           488  
000013BE                           489  
000013BE                           490                  
000013BE                           491                
000013BE                           492  *----------OpCode-----------------                
000013BE  43F9 000013E0            493  disMoveByte     LEA     MOVEByteDis, A1
000013C4  103C 000E                494                  MOVE.B  #14, D0
000013C8  4E4F                     495                  TRAP    #15
000013CA  4E75                     496                  RTS                
000013CC                           497  
000013CC                           498  
000013CC                           499  
000013CC                           500  
000013CC                           501  
000013CC                           502  
000013CC                           503  *-----------Error------------------         
000013CC  43F9 000013DA            504  disError        LEA     Error, A1
000013D2  103C 000E                505                  Move.B  #14, D0
000013D6  4E4F                     506                  Trap    #15
000013D8  4E75                     507                  RTS          
000013DA                           508           
000013DA                           509  *----------------------------------------------------------------
000013DA                           510  *                         String constants                      |
000013DA                           511  *----------------------------------------------------------------
000013DA                           512  
000013DA                           513  * Put variables and constants here
000013DA= 65 72 72 6F 72 00        514  Error DC.B  'error', 0
000013E0                           515  
000013E0= 4D 4F 56 45 2E 42 ...    516  MOVEByteDis     DC.B    'MOVE.B ', 0
000013E8= 4D 4F 56 45 2E 57 ...    517  MOVEWordDis     DC.B    'MOVE.W ', 0   
000013F0= 4D 4F 56 45 2E 4C ...    518  MOVELongDis     DC.B    'MOVE.L ', 0
000013F8= 44 00                    519  DnReg           DC.B    'D', 0
000013FA= 41 00                    520  AnReg           DC.B    'A', 0
000013FC= 28 00                    521  LeftParen       DC.B    '(', 0
000013FE= 29 00                    522  RightParen      DC.B    ')', 0
00001400= 2B 00                    523  disPlus         DC.B    '+', 0
00001402= 2D 00                    524  disMinus        DC.B    '-', 0
00001404= 2C 00                    525  disComma        DC.B    ',', 0
00001406= 20 00                    526  disSpace        DC.B    ' ', 0
00001408= 49 64 65 6E 74 69 ...    527  ASKSTART        DC.B    'Identify the starting memory location: ', 0
00001430= 49 64 65 6E 74 69 ...    528  ASKEND          DC.B    'Identify the ending memory location: ', 0
00001456                           529  
00001456                           530  *numbers
00001456= 30 00                    531  disZero         DC.B    '0', 0
00001458= 31 00                    532  disOne          DC.B    '1', 0
0000145A= 32 00                    533  disTwo          DC.B    '2', 0
0000145C= 33 00                    534  disThree        DC.B    '3', 0
0000145E= 34 00                    535  disFour         DC.B    '4', 0
00001460= 35 00                    536  disFive         DC.B    '5', 0
00001462= 36 00                    537  disSix          DC.B    '6', 0
00001464= 37 00                    538  disSeven        DC.B    '7', 0
00001466                           539  
00001466= 00                       540  disNewLine      DC.B    '', 0
00001467                           541  
00001467                           542      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANDESDISXN          1208
ANINDDESDISXN       1218
ANINDSRCDISXN       1210
ANPOSDESDISXN       1238
ANPOSSRCDISXN       1230
ANPREDESDISXN       1228
ANPRESRCDISXN       1220
ANREG               13FA
ANSRCDISXN          1200
ASKEND              1430
ASKSTART            1408
CODE0000            1084
CODE0001            1088
CODE0010            108C
CODE0011            1090
CODE0100            1094
CODE0101            1098
CODE0110            109C
CODE0111            10A0
CODE1000            10A4
CODE1001            10A8
CODE1010            10AC
CODE1011            10B0
CODE1100            10B2
CODE1101            10B6
CODE1110            10BA
CODE1111            10BE
DESMODEDECODE       10F4
DESMOVEDECODE       10F0
DESXNDECODE         1118
DISANINDBACK        1278
DISANINDMODE        1264
DISANPOSBACK        1296
DISANPOSMODE        1282
DISANPREBACK        12C4
DISANPREMODE        12A6
DISANREG            12DE
DISANREGBACK        1260
DISANREGMODE        1252
DISCOMMA            1404
DISDNREG            12D0
DISDNREGBACK        124E
DISDNREGMODE        1240
DISERROR            13CC
DISFIVE             1460
DISFOUR             145E
DISLEFTPAREN        12EC
DISMINUS            1402
DISMOVEBYTE         13BE
DISNEWLINE          1466
DISONE              1458
DISPLAYCOMMA        1324
DISPLAYLINE         1340
DISPLAYMINUS        1316
DISPLAYPLUS         1308
DISPLAYSPACE        1332
DISPLUS             1400
DISRIGHTPAREN       12FA
DISSEVEN            1464
DISSIX              1462
DISSPACE            1406
DISTHREE            145C
DISTWO              145A
DISZERO             1456
DNDESDISXN          11F8
DNREG               13F8
DNSRCDISXN          11F0
ENDPT               55
ERROR               13DA
EXAMPLE             1217
JMP_TABLE           1024
LEFTPAREN           13FC
MODECOMPARE         1154
MODECOMPARE1        1160
MODECOMPARE2        116C
MODECOMPARE3        1178
MODECOMPARE4        1180
MODECOMPARE5        1188
MODEDECODE          1132
MOVEBYTE            10C2
MOVEBYTEDIS         13E0
MOVELONGDIS         13F0
MOVEWORDDIS         13E8
REGMODEXNDECODE     112E
RIGHTPAREN          13FE
SHIFT10             A
SHIFT12             C
SHIFT13             D
STACK               A000
START               1000
STARTPT             AA
TEMP                400
XNCOMPARE           1190
XNCOMPARE1          119C
XNCOMPARE2          11A8
XNCOMPARE3          11B4
XNCOMPARE4          11C0
XNCOMPARE5          11CC
XNCOMPARE6          11D8
XNCOMPARE7          11E4
XNDECODE            1146
XNIS0               134E
XNIS1               135C
XNIS2               136A
XNIS3               1378
XNIS4               1386
XNIS5               1394
XNIS6               13A2
XNIS7               13B0
