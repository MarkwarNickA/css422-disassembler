00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/28/2014 4:56:06 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :CSS422 Project
00000000                             3  * Written by :Nicholas Abel and Julio Perez
00000000                             4  * Date       :November 7, 2014
00000000                             5  * Description:Disassembler
00000000                             6  *
00000000                             7  *Nomenclature:   | OpCode |     Part       | Job
00000000                             8  *                | OpCode | Part | SubPart | Job
00000000                             9  *
00000000                            10  *-----------------------------------------------------------
00000000  =000000AA                 11  STARTPT   EQU $AA     *starting point
00000000  =00000055                 12  ENDPT     EQU $55     *ending point
00000000  =00000400                 13  temp      EQU $400    *location to work at
00000000  =0000A000                 14  stack     EQU $A000
00000000  =0000E00F                 15  example   EQU %1110000000001111    * I made up bits 0 to 11      
00000000  =0000000C                 16  shift12   EQU 12                   * Shift 12 bits 
00000000  =0000000A                 17  shift10   EQU 10                   * Shift 10 bits
00000000  =0000000D                 18  shift13   EQU 13 
00000000                            19  
00000000                            20  
00001000                            21          ORG    $1000
00001000                            22  START:                          
00001000                            23  *        LEA     ASKSTART, A1    *message to ask user for input
00001000                            24  *        MOVE.B  #13, D0         *rule 13 allows print without line feed and carriage return if neccesary
00001000                            25  *        TRAP    #15             *Display A1 message
00001000                            26  *        
00001000                            27  *        MOVE.B  #4, D0          *input rule saves to D1
00001000                            28  *        TRAP    #15             *initiate read from keyboard
00001000                            29  *        
00001000                            30  *        MOVE.B  D1, STARTPT        *save number to NUM1
00001000                            31  *        
00001000                            32  *        LEA     ASKEND, A1      *ask about ending memory location
00001000                            33  *        MOVE.B  #13, D0         
00001000                            34  *        TRAP    #15             *display A1
00001000                            35  *        
00001000                            36  *        MOVE.B  #4, D0          *
00001000                            37  *        TRAP    #15
00001000                            38  *        
00001000                            39  *        MOVE.B  D1, ENDPT         *ending memory location stored
00001000                            40  
00001000  4FF9 0000A000             41          LEA     stack,SP        *Load the SP
00001006  41F9 00001024             42          LEA     jmp_table,A0    *Index into the table
0000100C                            43  
0000100C  4280                      44          CLR.L   D0              *Zero it
0000100E  4281                      45          CLR.L   D1
00001010                            46   
00001010                            47  *Get word size element
00001010  3C3C E00F                 48              MOVE.W      #example,D6     *variable put in place        
00001014  3006                      49              MOVE.W      D6, D0
00001016  123C 000C                 50              MOVE.B      #shift12,D1       *Shift 12 bits to the right  
0000101A  E268                      51              LSR.W       D1,D0           *Move the bits
0000101C  C0FC 0006                 52              MULU        #6,D0       *Form offset     
00001020                            53  
00001020  4EB0 0000                 54              JSR         0(A0,D0)    *Jump indirect with index
00001024                            55  * check read pointer location against EnDPt if end done
00001024                            56  * otherwise move back into read sub routine
00001024                            57                      
00001024                            58  
00001024                            59  *----------------------------------------------------------------
00001024                            60  *                       OpCode ID Table                         |
00001024                            61  *----------------------------------------------------------------
00001024                            62  
00001024                            63  
00001024                            64  jmp_table  
00001024                            65  
00001024  4EF9 00001084             66                 JMP         code0000
0000102A                            67  
0000102A  4EF9 00001088             68                 JMP         code0001
00001030                            69  
00001030  4EF9 0000108C             70                 JMP         code0010
00001036                            71  
00001036  4EF9 00001090             72                 JMP         code0011
0000103C                            73  
0000103C  4EF9 00001094             74                 JMP         code0100
00001042                            75  
00001042  4EF9 00001098             76                 JMP         code0101
00001048                            77  
00001048  4EF9 0000109C             78                 JMP         code0110
0000104E                            79  
0000104E  4EF9 000010A0             80                 JMP         code0111
00001054                            81  
00001054  4EF9 000010A4             82                 JMP         code1000
0000105A                            83  
0000105A  4EF9 000010A8             84                 JMP         code1001
00001060                            85  
00001060  4EF9 000010AC             86                 JMP         code1010
00001066                            87  
00001066  4EF9 000010B0             88                 JMP         code1011
0000106C                            89  
0000106C  4EF9 000010B2             90                 JMP         code1100
00001072                            91  
00001072  4EF9 000010B6             92                 JMP         code1101
00001078                            93  
00001078  4EF9 000010BA             94                 JMP         code1110
0000107E                            95  
0000107E  4EF9 000010BE             96                 JMP         code1111
00001084                            97  
00001084                            98  *subroutines from jump table
00001084                            99  
00001084                           100  
00001084  4E72 0A8C                101  code0000       STOP        #2700
00001088                           102  
00001088  6000 0038                103  code0001       BRA         MoveByte
0000108C                           104  
0000108C  6000 0084                105  code0010       BRA         MoveLong
00001090                           106  
00001090  6000 0058                107  code0011       BRA         MoveWord
00001094                           108  
00001094  4E72 2700                109  code0100       STOP        #$2700
00001098                           110  
00001098  4E72 2700                111  code0101       STOP        #$2700
0000109C                           112  
0000109C  4E72 2700                113  code0110       STOP        #$2700
000010A0                           114  
000010A0  4E72 2700                115  code0111       STOP        #$2700
000010A4                           116  
000010A4  4E72 2700                117  code1000       STOP        #$2700
000010A8                           118  
000010A8  4E72 2700                119  code1001       STOP        #$2700
000010AC                           120  
000010AC  4E72 2700                121  code1010       STOP        #$2700
000010B0                           122   
000010B0  60FE                     123  code1011       BRA         code1011
000010B2                           124  
000010B2  4E72 2700                125  code1100       STOP        #$2700
000010B6                           126  
000010B6  4E72 2700                127  code1101       STOP        #$2700
000010BA                           128  
000010BA  6000 00E8                129  code1110       BRA         BitShiftGroup
000010BE                           130  
000010BE  4E72 2700                131  code1111       STOP        #$2700
000010C2                           132  
000010C2                           133   
000010C2                           134  
000010C2                           135  *----------------------------------------------------------------
000010C2                           136  *                OpCode Breakdown Methods                       |
000010C2                           137  *----------------------------------------------------------------
000010C2                           138  
000010C2                           139  *--------------MOVE.B Decode-----------------------------
000010C2                           140  
000010C2  4EB9 00001554            141  MoveByte        JSR     disMoveByte
000010C8                           142  
000010C8                           143  *continue searching through the machine code for source then destination
000010C8                           144  *because of writing format
000010C8  4EB9 0000113A            145                  JSR     MoveSrcDecode * src decode
000010CE  4EB9 0000143C            146                  JSR     displayComma
000010D4  4EB9 0000144A            147                  JSR     displaySpace
000010DA  4EB9 0000116C            148                  JSR     MoveDesDecode   *destination decode
000010E0  4EB9 00001458            149                  JSR     displayLine 
000010E6  4E71                     150                  NOP
000010E8  4E75                     151                  RTS
000010EA                           152           
000010EA                           153  
000010EA                           154  *--------------MOVE.W Decode-----------------------------
000010EA                           155  
000010EA  4EB9 00001562            156  MoveWord        JSR     disMoveWord
000010F0                           157  
000010F0  4EB9 0000113A            158                  JSR     MoveSrcDecode * src decode
000010F6  4EB9 0000143C            159                  JSR     displayComma
000010FC  4EB9 0000144A            160                  JSR     displaySpace
00001102  4EB9 0000116C            161                  JSR     MoveDesDecode   *destination decode
00001108  4EB9 00001458            162                  JSR     displayLine 
0000110E  4E71                     163                  NOP
00001110  4E75                     164                  RTS
00001112                           165                  
00001112                           166                  
00001112                           167  *--------------MOVE.L Decode-----------------------------
00001112                           168  
00001112  4EB9 00001570            169  MoveLong        JSR     disMoveLong
00001118                           170  
00001118  4EB9 0000113A            171                  JSR     MoveSrcDecode * src decode
0000111E  4EB9 0000143C            172                  JSR     displayComma
00001124  4EB9 0000144A            173                  JSR     displaySpace
0000112A  4EB9 0000116C            174                  JSR     MoveDesDecode   *destination decode
00001130  4EB9 00001458            175                  JSR     displayLine 
00001136  4E71                     176                  NOP
00001138  4E75                     177                  RTS
0000113A                           178  
0000113A                           179  *----------------------------------------------------------------
0000113A                           180  *                  MOVE   Decode Methods                        |
0000113A                           181  *----------------------------------------------------------------
0000113A                           182  
0000113A  6000 0002                183  MoveSrcDecode   BRA MoveSrcXnDecode
0000113E                           184  
0000113E                           185  MoveSrcXnDecode
0000113E  4240                     186                  CLR     D0
00001140  4241                     187                  CLR     D1
00001142  3006                     188                  MOVE.W  D6, D0
00001144  E658                     189                  ROR.W   #3, D0       * last three bits to isolate Xn
00001146                           190                  
00001146  123C 000D                191                  MOVE.B  #shift13, D1
0000114A  E268                     192                  LSR.W   D1,D0        *format is good last three bits in least signifant location
0000114C  3600                     193                  MOVE.W  D0, D3
0000114E  6000 0002                194                  BRA     MoveSrcModeDecode
00001152                           195        
00001152                           196  MoveSrcModeDecode
00001152  4240                     197                  CLR     D0
00001154  4241                     198                  CLR     D1
00001156  3006                     199                  MOVE.W  D6, D0
00001158  EC58                     200                  ROR.W   #6, D0
0000115A  123C 000A                201                  MOVE.B  #shift10,D1     *Prepare D1 for shifting 10
0000115E                           202  
0000115E  E268                     203                  LSR.W   D1,D0           *Shift D0 #10 bits to the right
00001160                           204                  
00001160  E648                     205                  LSR.W   #3, D0   *D2 now has the mode
00001162  3400                     206                  MOVE.W  D0, D2
00001164  4EB9 000012CC            207                  JSR     ModeCompare
0000116A  4E75                     208                  RTS    
0000116C                           209  
0000116C                           210  
0000116C                           211  
0000116C                           212  
0000116C                           213  *------------
0000116C  6000 0002                214  MoveDesDecode   BRA     MoveDesXnDecode        
00001170                           215  
00001170                           216  
00001170                           217  
00001170                           218  MoveDesXnDecode
00001170  3006                     219                  MOVE.W  D6,D0
00001172  123C 000C                220                  MOVE.B  #shift12, D1
00001176  E278                     221                  ROR.W   D1, D0
00001178  123C 000D                222                  MOVE.B  #shift13, D1
0000117C                           223                  
0000117C  E268                     224                  LSR.W   D1, D0    *isolates Xn
0000117E  3600                     225                  MOVE.W  D0, D3
00001180                           226                  
00001180  6000 0002                227                  BRA     MoveDesModeDecode
00001184                           228          
00001184                           229  MoveDesModeDecode  
00001184  3006                     230                  MOVE.W  D6, D0
00001186  123C 000C                231                  MOVE.B  #shift12, D1
0000118A  E278                     232                  ROR.W   D1, D0
0000118C  123C 000A                233                  MOVE.B  #shift10, D1
00001190                           234                  
00001190  E268                     235                  LSR.W   D1, D0
00001192                           236                  *must isolate the mode
00001192  E658                     237                  ROR.W   #3, D0
00001194  123C 000D                238                  MOVE.B  #shift13, D1
00001198  E268                     239                  LSR.W   D1, D0       *mode isolated
0000119A  3400                     240                  MOVE.W  D0, D2
0000119C  4EB9 000012CC            241                  JSR     ModeCompare
000011A2  4E75                     242                  RTS
000011A4                           243  
000011A4                           244  
000011A4                           245  
000011A4                           246  
000011A4                           247  
000011A4                           248  
000011A4                           249  *--------------BitShiftingGroup Decode-----------------------------
000011A4                           250  
000011A4  6000 0002                251  bitShiftGroup            BRA bitShiftType
000011A8                           252  
000011A8                           253  bitShiftType
000011A8  4240                     254                  CLR         D0
000011AA  4241                     255                  CLR         D1
000011AC  4242                     256                  CLR         D2  *    
000011AE  4243                     257                  CLR         D3  *
000011B0  4244                     258                  CLR         D4  *will store direction of opcode
000011B2  4245                     259                  CLR         D5  *size
000011B4  4247                     260                  CLR         D7  *i/r
000011B6                           261                  
000011B6                           262  *------------       store direction bit               
000011B6  3806                     263                  MOVE.W      D6, D4
000011B8  EF4C                     264                  LSL.W       #7, D4
000011BA  123C 000F                265                  MOVE.B      #15, D1
000011BE  E26C                     266                  LSR.W       D1, D4
000011C0                           267  *-------------      store size bits
000011C0  1A06                     268                  MOVE.B      D6, D5
000011C2  EC0D                     269                  LSR.B       #6, D5
000011C4                           270  *--------------     store i/r
000011C4  1E06                     271                  MOVE.B      D6, D7
000011C6  E50F                     272                  LSL.B       #2, D7
000011C8  EE0F                     273                  LSR.B       #7, D7
000011CA                           274  *-------------
000011CA                           275                  
000011CA                           276  *-------------      store type
000011CA  3006                     277                  MOVE.W      D6, D0             
000011CC  E648                     278                  LSR.W       #3, D0
000011CE  323C 000E                279                  MOVE.W      #14,D1
000011D2  E368                     280                  LSL.W       D1, D0
000011D4  E268                     281                  LSR.W       D1, D0
000011D6  6000 0002                282                  BRA         BitShiftTypeCompare
000011DA                           283  
000011DA                           284                                 
000011DA                           285  BitShiftTypeCompare
000011DA  0C00 0001                286                  CMPI.B      #%01, D0
000011DE  6700 0012                287                  BEQ         LogShiftGroup
000011E2  0C00 0000                288                  CMPI.B      #%00, D0
000011E6  6700 002E                289                  BEQ         AsyShiftGroup
000011EA  0C00 0003                290                  CMPI.B      #%11, D0
000011EE  6700 004A                291                  BEQ         RotShiftGroup
000011F2                           292                  
000011F2                           293  
000011F2                           294  LogShiftGroup
000011F2  4EB9 0000158C            295                  JSR         disLogicShift    
000011F8  4EB9 000012A0            296                  JSR         printDirection
000011FE  4EB9 000012AE            297                  JSR         printSize
00001204  4EB9 0000125E            298                  JSR         ShiftGrpCount
0000120A  4EB9 0000143C            299                  JSR         displayComma
00001210  4EB9 0000144A            300                  JSR         displaySpace
00001216                           301  *               JSR         ShiftGrpDest
00001216                           302  
00001216                           303  AsyShiftGroup
00001216  4EB9 0000157E            304                  JSR         disAsymmShift    
0000121C  4EB9 000012A0            305                  JSR         printDirection
00001222  4EB9 000012AE            306                  JSR         printSize
00001228  4EB9 0000125E            307                  JSR         ShiftGrpCount
0000122E  4EB9 0000143C            308                  JSR         displayComma
00001234  4EB9 0000144A            309                  JSR         displaySpace
0000123A                           310  *               JSR         ShiftGrpDest
0000123A                           311  
0000123A                           312  
0000123A                           313  RotShiftGroup
0000123A  4EB9 0000159A            314                  JSR         disRotateShift    
00001240  4EB9 000012A0            315                  JSR         printDirection
00001246  4EB9 000012AE            316                  JSR         printSize
0000124C  4EB9 0000125E            317                  JSR         ShiftGrpCount
00001252  4EB9 0000143C            318                  JSR         displayComma
00001258  4EB9 0000144A            319                  JSR         displaySpace
0000125E                           320  *               JSR         ShiftGrpDest
0000125E                           321  
0000125E                           322  
0000125E                           323  ShiftGrpCount
0000125E  0C07 0000                324                  CMPI.B      #0, D7
00001262  6700 0006                325                  BEQ         printImmData
00001266  6600 0010                326                  BNE         printRegister    
0000126A                           327  
0000126A                           328  
0000126A                           329  printImmData    
0000126A  4EB9 00001546            330                  JSR         printHash
00001270  4EB9 00001286            331                  JSR         printShiftRegNumber
00001276  4E75                     332                  RTS
00001278                           333                                  
00001278                           334  printRegister
00001278  4EB9 000013E8            335                  JSR         disDnReg
0000127E  4EB9 00001286            336                  JSR         printShiftRegNumber
00001284  4E75                     337                  RTS
00001286                           338                  
00001286                           339  printShiftRegNumber
00001286  3206                     340                  MOVE.W      D6, D1
00001288  E949                     341                  LSL.W       #4, D1
0000128A  143C 000D                342                  MOVE.B      #13, D2
0000128E  E469                     343                  LSR.W       D2, D1                
00001290  0C01 0000                344                  CMPI.B      #0, D1
00001294  6700 0240                345                  BEQ         print8
00001298  103C 0003                346                  MOVE.B      #3, D0
0000129C  4E4F                     347                  TRAP #15
0000129E                           348                  
0000129E  4E75                     349                  RTS
000012A0                           350                  
000012A0                           351                  
000012A0                           352  
000012A0                           353  
000012A0                           354       
000012A0                           355                                  
000012A0                           356                  
000012A0                           357                  
000012A0                           358  
000012A0                           359  printDirection
000012A0  0C04 0000                360                  CMPI.B      #0, D4
000012A4  6700 033C                361                  BEQ         disRightDir
000012A8  6600 0328                362                  BNE         disLeftDir
000012AC                           363  printDirRet
000012AC  4E75                     364                  RTS
000012AE                           365  
000012AE                           366  
000012AE                           367  printSize
000012AE  0C05 0000                368                  CMPI.B      #0, D5
000012B2  6700 02F4                369                  BEQ         disByteSize
000012B6  0C05 0001                370                  CMPI.B      #1, D5
000012BA  6700 02FA                371                  BEQ         disWordSize
000012BE  0C05 0002                372                  CMPI.B      #2, D5
000012C2  6700 0300                373                  BEQ         disLongSize
000012C6  6600 032A                374                  BNE         disError
000012CA                           375  printSizeRet
000012CA  4E75                     376                  RTS
000012CC                           377  
000012CC                           378  
000012CC                           379  
000012CC                           380  *----------------------------------------------------------------
000012CC                           381  *                         Comparisons                           |
000012CC                           382  *----------------------------------------------------------------
000012CC                           383  
000012CC                           384  
000012CC                           385  *------------------Mode Comparisons -----------------------------------------
000012CC                           386  
000012CC  0C02 0000                387  ModeCompare     CMPI.B  #%000, D2 * last three are zeroes
000012D0  6700 009E                388                  BEQ     disDnRegMode       *jump to subroutine for Data register Source
000012D4  6600 0002                389                  BNE     ModeCompare1              *FIXME: needs to have not equal Branch here
000012D8                           390                  
000012D8  0C02 0001                391  ModeCompare1    CMPI.B  #%001, D2
000012DC  6700 00A0                392                  BEQ     disAnRegMode
000012E0  6600 0002                393                  BNE     ModeCompare2
000012E4                           394                  
000012E4  0C02 0002                395  ModeCompare2    CMPI.B  #%010, D2
000012E8  6700 00A2                396                  BEQ     disAnIndMode
000012EC  6600 0002                397                  BNE     ModeCompare3
000012F0                           398                  
000012F0  0C02 0003                399  ModeCompare3    CMPI.B  #%011, D2
000012F4  6700 00B0                400                  BEQ    disAnPosMode
000012F8  6600 0002                401                  BNE     ModeCompare4
000012FC                           402  
000012FC  0C02 0004                403  ModeCompare4    CMPI.B  #%100, D2
00001300  6700 00C4                404                  BEQ    disAnPreMode
00001304  6600 0002                405                  BNE     ModeCompare5
00001308                           406                  
00001308  0C02 0007                407  ModeCompare5    CMPI.B  #%111, D2
0000130C                           408  *                BEQ    disEAmode
0000130C  6600 02E4                409                  BNE     disError
00001310                           410  
00001310                           411               
00001310                           412  
00001310                           413  *---------------------Register Compare---------------------                
00001310  0C03 0000                414  XnCompare       CMPI.b  #%000, D3
00001314  6700 0150                415                  BEQ     Print0
00001318  6600 0002                416                  BNE     XnCompare1
0000131C                           417                  
0000131C  0C03 0001                418  XnCompare1      CMPI.b  #%001, D3
00001320  6700 0152                419                  BEQ     Print1
00001324  6600 0002                420                  BNE     XnCompare2
00001328                           421  
00001328  0C03 0002                422  XnCompare2      CMPI.b  #%010, D3
0000132C  6700 0154                423                  BEQ     Print2
00001330  6600 0002                424                  BNE     XnCompare3
00001334                           425  
00001334  0C03 0003                426  XnCompare3      CMPI.b  #%011, D3
00001338  6700 0156                427                  BEQ     Print3
0000133C  6600 0002                428                  BNE     XnCompare4
00001340                           429  
00001340  0C03 0004                430  XnCompare4      CMPI.b  #%100, D3
00001344  6700 0158                431                  BEQ     Print4
00001348  6600 0002                432                  BNE     XnCompare5
0000134C                           433  
0000134C  0C03 0005                434  XnCompare5      CMPI.b  #%101, D3
00001350  6700 015A                435                  BEQ     Print5
00001354  6600 0002                436                  BNE     XnCompare6
00001358                           437  
00001358  0C03 0006                438  XnCompare6      CMPI.b  #%110, D3
0000135C  6700 015C                439                  BEQ     Print6
00001360  6600 0002                440                  BNE     XnCompare7
00001364                           441  
00001364  0C03 0007                442  XnCompare7      CMPI.b  #%111, D3
00001368  6700 015E                443                  BEQ     Print7
0000136C  6600 0284                444                  BNE     disError
00001370                           445                  * FIXME we may need to use this for a bad command BNE XnCompare1
00001370                           446  
00001370                           447  
00001370                           448  *----------------------------------------------------------------
00001370                           449  *                          DISPLAYS                             |
00001370                           450  *----------------------------------------------------------------
00001370                           451  
00001370                           452  
00001370                           453            
00001370                           454  
00001370                           455  
00001370                           456  *---------------------MODE Displays----------------------
00001370                           457  
00001370                           458  
00001370                           459  *-------------------
00001370                           460  
00001370  4EB9 000013E8            461  disDnRegMode    JSR     disDnReg
00001376                           462  
00001376  4EB8 1310                463                  JSR     XnCompare
0000137A                           464                  
0000137A  4287                     465                  CLR.L   D7
0000137C  4E75                     466                  RTS
0000137E                           467  
0000137E                           468  *-------------------
0000137E                           469                      
0000137E  4EB9 000013F6            470  disAnRegMode    JSR     disAnReg
00001384                           471  
00001384  4EB8 1310                472                  JSR     XnCompare
00001388                           473                  
00001388  4287                     474                  CLR.L   D7
0000138A  4E75                     475                  RTS
0000138C                           476  
0000138C                           477  *-------------------
0000138C                           478  
0000138C  4EB9 00001404            479  disAnIndMode    JSR     disLeftParen
00001392  4EB9 000013F6            480                  JSR     disAnReg
00001398                           481                  
00001398  4EB8 1310                482                  JSR     XnCompare
0000139C                           483                  
0000139C  4287                     484                  CLR.L   D7
0000139E                           485                  
0000139E  4EB9 00001412            486                  JSR     disRightParen
000013A4                           487                  
000013A4  4E75                     488                  RTS
000013A6                           489                  
000013A6                           490  *-------------------
000013A6                           491  
000013A6  4EB9 00001404            492  disAnPosMode    JSR     disLeftParen
000013AC  4EB9 000013F6            493                  JSR     disAnReg
000013B2                           494                  
000013B2  4EB8 1310                495                  JSR     XnCompare
000013B6                           496                  
000013B6  4287                     497                  CLR.L   D7
000013B8                           498                  
000013B8  4EB9 00001412            499                  JSR     disRightParen
000013BE  4EB9 00001420            500                  JSR     displayPlus
000013C4                           501                  
000013C4  4E75                     502                  RTS
000013C6                           503  
000013C6                           504  *-------------------
000013C6                           505  
000013C6  4EB9 0000142E            506  disAnPreMode    JSR     displayMinus
000013CC  4EB9 00001404            507                  JSR     disLeftParen
000013D2  4EB9 000013F6            508                  JSR     disAnReg
000013D8                           509                  
000013D8  4EB8 1310                510                  JSR     XnCompare
000013DC                           511                  
000013DC  4287                     512                  CLR.L   D7
000013DE                           513                  
000013DE  4EB9 00001412            514                  JSR     disRightParen
000013E4                           515                  
000013E4  4287                     516                  CLR.L   D7
000013E6  4E75                     517                  RTS
000013E8                           518                  
000013E8                           519  *-------------------
000013E8                           520  
000013E8                           521  
000013E8                           522        
000013E8                           523                        
000013E8                           524  *----------------------Register Displays---------------------- 
000013E8                           525  
000013E8                           526  
000013E8                           527  *------------------Characters--------------------------------
000013E8                           528  
000013E8  43F9 00001639            529  disDnReg        LEA     DnReg, A1
000013EE  103C 000E                530                  MOVE.B  #14, D0
000013F2  4E4F                     531                  TRAP    #15
000013F4  4E75                     532                  RTS
000013F6                           533  
000013F6                           534  
000013F6  43F9 0000163B            535  disAnReg        LEA     AnReg, A1
000013FC  103C 000E                536                  MOVE.B  #14, D0
00001400  4E4F                     537                  TRAP    #15
00001402  4E75                     538                  RTS
00001404                           539  
00001404  43F9 0000163D            540  disLeftParen    LEA     LeftParen, A1
0000140A  103C 000E                541                  MOVE.B  #14, D0
0000140E  4E4F                     542                  TRAP    #15
00001410  4E75                     543                  RTS
00001412                           544                  
00001412  43F9 0000163F            545  disRightParen   LEA     RightParen, A1
00001418  103C 000E                546                  MOVE.B  #14, D0
0000141C  4E4F                     547                  TRAP    #15
0000141E  4E75                     548                  RTS
00001420                           549                  
00001420                           550                
00001420  43F9 00001641            551  displayPlus     LEA     disPlus, A1
00001426  103C 000E                552                  MOVE.B  #14, D0
0000142A  4E4F                     553                  TRAP    #15
0000142C  4E75                     554                  RTS
0000142E                           555                  
0000142E  43F9 00001643            556  displayMinus    LEA     disMinus, A1
00001434  103C 000E                557                  MOVE.B  #14, D0
00001438  4E4F                     558                  TRAP    #15
0000143A  4E75                     559                  RTS
0000143C                           560  
0000143C  43F9 00001645            561  displayComma    LEA     disComma, A1
00001442  103C 000E                562                  MOVE.B  #14, D0
00001446  4E4F                     563                  TRAP    #15
00001448  4E75                     564                  RTS
0000144A                           565                  
0000144A  43F9 00001647            566  displaySpace    LEA     disSpace, A1
00001450  103C 000E                567                  MOVE.B  #14, D0
00001454  4E4F                     568                  TRAP    #15
00001456  4E75                     569                  RTS
00001458                           570                  
00001458  43F9 000016B7            571  displayLine     LEA     disNewLine, A1
0000145E  103C 0000                572                  MOVE.B  #0, D0
00001462  4E4F                     573                  TRAP    #15
00001464  4E75                     574                  RTS
00001466                           575                  
00001466                           576                  
00001466                           577  *-----------Numbers------------               
00001466  43F9 00001697            578  print0          LEA     disZero, A1
0000146C  103C 000E                579                  MOVE.B  #14, D0
00001470  4E4F                     580                  TRAP    #15
00001472  4E75                     581                  RTS
00001474                           582                  
00001474  43F9 00001699            583  print1          LEA     disOne, A1
0000147A  103C 000E                584                  MOVE.B  #14, D0
0000147E  4E4F                     585                  TRAP    #15
00001480  4E75                     586                  RTS
00001482                           587  
00001482  43F9 0000169B            588  print2          LEA     disTwo, A1
00001488  103C 000E                589                  MOVE.B  #14, D0
0000148C  4E4F                     590                  TRAP    #15
0000148E  4E75                     591                  RTS
00001490                           592  
00001490  43F9 0000169D            593  print3          LEA     disThree, A1
00001496  103C 000E                594                  MOVE.B  #14, D0
0000149A  4E4F                     595                  TRAP    #15
0000149C  4E75                     596                  RTS
0000149E                           597  
0000149E  43F9 0000169F            598  print4          LEA     disFour, A1
000014A4  103C 000E                599                  MOVE.B  #14, D0
000014A8  4E4F                     600                  TRAP    #15
000014AA  4E75                     601                  RTS
000014AC                           602  
000014AC  43F9 000016A1            603  print5          LEA     disFive, A1
000014B2  103C 000E                604                  MOVE.B  #14, D0
000014B6  4E4F                     605                  TRAP    #15
000014B8  4E75                     606                  RTS
000014BA                           607  
000014BA  43F9 000016A3            608  print6          LEA     disSix, A1
000014C0  103C 000E                609                  MOVE.B  #14, D0
000014C4  4E4F                     610                  TRAP    #15
000014C6  4E75                     611                  RTS
000014C8                           612  
000014C8  43F9 000016A5            613  print7          LEA     disSeven, A1
000014CE  103C 000E                614                  MOVE.B  #14, D0
000014D2  4E4F                     615                  TRAP    #15
000014D4  4E75                     616                  RTS
000014D6                           617  
000014D6  43F9 000016A7            618  print8          LEA     disEight, A1
000014DC  103C 000E                619                  MOVE.B  #14, D0
000014E0  4E4F                     620                  TRAP    #15
000014E2  4E75                     621                  RTS
000014E4                           622                  
000014E4  43F9 000016A9            623  print9          LEA     disNine, A1
000014EA  103C 000E                624                  MOVE.B  #14, D0
000014EE  4E4F                     625                  TRAP    #15
000014F0  4E75                     626                  RTS
000014F2                           627  
000014F2  43F9 000016AB            628  printA          LEA     disA, A1
000014F8  103C 000E                629                  MOVE.B  #14, D0
000014FC  4E4F                     630                  TRAP    #15
000014FE  4E75                     631                  RTS
00001500                           632  
00001500  43F9 000016AD            633  printB          LEA     disB, A1
00001506  103C 000E                634                  MOVE.B  #14, D0
0000150A  4E4F                     635                  TRAP    #15
0000150C  4E75                     636                  RTS
0000150E                           637  
0000150E  43F9 000016AF            638  printC          LEA     disC, A1
00001514  103C 000E                639                  MOVE.B  #14, D0
00001518  4E4F                     640                  TRAP    #15
0000151A  4E75                     641                  RTS
0000151C                           642  
0000151C  43F9 000016B1            643  printD          LEA     disD, A1
00001522  103C 000E                644                  MOVE.B  #14, D0
00001526  4E4F                     645                  TRAP    #15
00001528  4E75                     646                  RTS
0000152A                           647  
0000152A  43F9 000016B3            648  printE          LEA     disE, A1
00001530  103C 000E                649                  MOVE.B  #14, D0
00001534  4E4F                     650                  TRAP    #15
00001536  4E75                     651                  RTS
00001538                           652  
00001538  43F9 000016B5            653  printF          LEA     disF, A1
0000153E  103C 000E                654                  MOVE.B  #14, D0
00001542  4E4F                     655                  TRAP    #15
00001544  4E75                     656                  RTS
00001546                           657  
00001546  43F9 00001637            658  printHash       LEA     hashTag,A1
0000154C  103C 000E                659                  MOVE.B  #14, D0
00001550  4E4F                     660                  TRAP    #15
00001552  4E75                     661                  RTS
00001554                           662  
00001554                           663  *----------OpCode-----------------                
00001554  43F9 00001606            664  disMoveByte     LEA     MOVEByteDis, A1
0000155A  103C 000E                665                  MOVE.B  #14, D0
0000155E  4E4F                     666                  TRAP    #15
00001560  4E75                     667                  RTS                
00001562                           668  
00001562                           669  
00001562  43F9 0000160E            670  disMoveWord     LEA     MOVEWordDis, A1
00001568  103C 000E                671                  MOVE.B  #14, D0
0000156C  4E4F                     672                  TRAP    #15
0000156E  4E75                     673                  RTS
00001570                           674  
00001570  43F9 00001616            675  disMoveLong     LEA     MOVELongDis, A1
00001576  103C 000E                676                  MOVE.B  #14, D0
0000157A  4E4F                     677                  TRAP    #15
0000157C  4E75                     678                  RTS
0000157E                           679                  
0000157E                           680  disAsymmShift
0000157E  43F9 0000161E            681                  LEA     AsymmShift, A1
00001584  103C 000E                682                  MOVE.B  #14, D0
00001588  4E4F                     683                  TRAP    #15
0000158A  4E75                     684                  RTS
0000158C                           685  disLogicShift
0000158C  43F9 00001621            686                  LEA     logicShift, A1
00001592  103C 000E                687                  MOVE.B  #14, D0
00001596  4E4F                     688                  TRAP    #15
00001598  4E75                     689                  RTS
0000159A                           690  
0000159A                           691  disRotateShift                
0000159A  43F9 00001624            692                  LEA     rotateShift, A1
000015A0  103C 000E                693                  MOVE.B  #14, D0
000015A4  4E4F                     694                  TRAP    #15
000015A6  4E75                     695                  RTS                
000015A8                           696                  
000015A8                           697                  
000015A8                           698                  
000015A8                           699  
000015A8                           700  *-----------Sizes------------------  
000015A8  43F9 00001627            701  disByteSize     LEA     byteSize, A1
000015AE  103C 000E                702                  Move.B  #14, D0
000015B2  4E4F                     703                  Trap    #15
000015B4  4E75                     704                  RTS
000015B6                           705  
000015B6  43F9 0000162B            706  disWordSize     LEA     wordSize, A1
000015BC  103C 000E                707                  Move.B  #14, D0
000015C0  4E4F                     708                  Trap    #15
000015C2  4E75                     709                  RTS
000015C4                           710  
000015C4  43F9 0000162F            711  disLongSize     LEA     longSize, A1
000015CA  103C 000E                712                  Move.B  #14, D0
000015CE  4E4F                     713                  Trap    #15
000015D0  4E75                     714                  RTS
000015D2                           715  
000015D2                           716  
000015D2                           717  *-----------Directions------------------         
000015D2  43F9 00001633            718  disLeftDir      LEA     leftDir, A1
000015D8  103C 000E                719                  Move.B  #14, D0
000015DC  4E4F                     720                  Trap    #15
000015DE  6000 FCCC                721                  BRA     printDirRet
000015E2                           722  
000015E2  43F9 00001635            723  disRightDir     LEA     rightDir, A1
000015E8  103C 000E                724                  Move.B  #14, D0
000015EC  4E4F                     725                  Trap    #15
000015EE  6000 FCBC                726                  BRA     printDirRet
000015F2                           727  
000015F2                           728  
000015F2                           729  *-----------Error------------------         
000015F2  43F9 00001600            730  disError        LEA     Error, A1
000015F8  103C 000E                731                  Move.B  #14, D0
000015FC  4E4F                     732                  Trap    #15
000015FE  4E75                     733                  RTS          
00001600                           734           
00001600                           735  *----------------------------------------------------------------
00001600                           736  *                         String constants                      |
00001600                           737  *----------------------------------------------------------------
00001600                           738  
00001600                           739  * Put variables and constants here
00001600= 65 72 72 6F 72 00        740  Error DC.B  'error', 0
00001606                           741  
00001606= 4D 4F 56 45 2E 42 ...    742  MOVEByteDis     DC.B    'MOVE.B ', 0
0000160E= 4D 4F 56 45 2E 57 ...    743  MOVEWordDis     DC.B    'MOVE.W ', 0   
00001616= 4D 4F 56 45 2E 4C ...    744  MOVELongDis     DC.B    'MOVE.L ', 0
0000161E                           745  
0000161E= 41 53 00                 746  AsymmShift      DC.B    'AS', 0
00001621                           747  
00001621= 4C 53 00                 748  logicShift      DC.B    'LS', 0
00001624                           749  
00001624= 52 4F 00                 750  rotateShift     DC.B    'RO', 0
00001627                           751  
00001627                           752  
00001627                           753  
00001627= 2E 42 20 00              754  byteSize        DC.B    '.B ', 0
0000162B= 2E 57 20 00              755  wordSize        DC.B    '.W ', 0
0000162F= 2E 4C 20 00              756  longSize        DC.B    '.L ', 0
00001633                           757  
00001633= 4C 00                    758  leftDir         DC.B    'L', 0
00001635= 52 00                    759  rightDir        DC.B    'R', 0
00001637                           760  
00001637= 23 00                    761  hashtag         DC.B    '#', 0
00001639                           762  
00001639= 44 00                    763  DnReg           DC.B    'D', 0
0000163B= 41 00                    764  AnReg           DC.B    'A', 0
0000163D= 28 00                    765  LeftParen       DC.B    '(', 0
0000163F= 29 00                    766  RightParen      DC.B    ')', 0
00001641= 2B 00                    767  disPlus         DC.B    '+', 0
00001643= 2D 00                    768  disMinus        DC.B    '-', 0
00001645= 2C 00                    769  disComma        DC.B    ',', 0
00001647= 20 00                    770  disSpace        DC.B    ' ', 0
00001649= 49 64 65 6E 74 69 ...    771  ASKSTART        DC.B    'Identify the starting memory location: ', 0
00001671= 49 64 65 6E 74 69 ...    772  ASKEND          DC.B    'Identify the ending memory location: ', 0
00001697                           773  
00001697                           774  *numbers
00001697= 30 00                    775  disZero         DC.B    '0', 0
00001699= 31 00                    776  disOne          DC.B    '1', 0
0000169B= 32 00                    777  disTwo          DC.B    '2', 0
0000169D= 33 00                    778  disThree        DC.B    '3', 0
0000169F= 34 00                    779  disFour         DC.B    '4', 0
000016A1= 35 00                    780  disFive         DC.B    '5', 0
000016A3= 36 00                    781  disSix          DC.B    '6', 0
000016A5= 37 00                    782  disSeven        DC.B    '7', 0
000016A7= 38 00                    783  disEight        DC.B    '8', 0
000016A9= 39 00                    784  disNine         DC.B    '9', 0
000016AB                           785  
000016AB= 41 00                    786  disA            DC.B    'A', 0
000016AD= 42 00                    787  disB            DC.B    'B', 0
000016AF= 43 00                    788  disC            DC.B    'C', 0
000016B1= 44 00                    789  disD            DC.B    'D', 0
000016B3= 45 00                    790  disE            DC.B    'E', 0
000016B5= 46 00                    791  disF            DC.B    'F', 0
000016B7                           792  
000016B7= 00                       793  disNewLine      DC.B    '', 0
000016B8                           794   
000016B8                           795      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANREG               163B
ASKEND              1671
ASKSTART            1649
ASYMMSHIFT          161E
ASYSHIFTGROUP       1216
BITSHIFTGROUP       11A4
BITSHIFTTYPE        11A8
BITSHIFTTYPECOMPARE  11DA
BYTESIZE            1627
CODE0000            1084
CODE0001            1088
CODE0010            108C
CODE0011            1090
CODE0100            1094
CODE0101            1098
CODE0110            109C
CODE0111            10A0
CODE1000            10A4
CODE1001            10A8
CODE1010            10AC
CODE1011            10B0
CODE1100            10B2
CODE1101            10B6
CODE1110            10BA
CODE1111            10BE
DISA                16AB
DISANINDMODE        138C
DISANPOSMODE        13A6
DISANPREMODE        13C6
DISANREG            13F6
DISANREGMODE        137E
DISASYMMSHIFT       157E
DISB                16AD
DISBYTESIZE         15A8
DISC                16AF
DISCOMMA            1645
DISD                16B1
DISDNREG            13E8
DISDNREGMODE        1370
DISE                16B3
DISEIGHT            16A7
DISERROR            15F2
DISF                16B5
DISFIVE             16A1
DISFOUR             169F
DISLEFTDIR          15D2
DISLEFTPAREN        1404
DISLOGICSHIFT       158C
DISLONGSIZE         15C4
DISMINUS            1643
DISMOVEBYTE         1554
DISMOVELONG         1570
DISMOVEWORD         1562
DISNEWLINE          16B7
DISNINE             16A9
DISONE              1699
DISPLAYCOMMA        143C
DISPLAYLINE         1458
DISPLAYMINUS        142E
DISPLAYPLUS         1420
DISPLAYSPACE        144A
DISPLUS             1641
DISRIGHTDIR         15E2
DISRIGHTPAREN       1412
DISROTATESHIFT      159A
DISSEVEN            16A5
DISSIX              16A3
DISSPACE            1647
DISTHREE            169D
DISTWO              169B
DISWORDSIZE         15B6
DISZERO             1697
DNREG               1639
ENDPT               55
ERROR               1600
EXAMPLE             E00F
HASHTAG             1637
JMP_TABLE           1024
LEFTDIR             1633
LEFTPAREN           163D
LOGICSHIFT          1621
LOGSHIFTGROUP       11F2
LONGSIZE            162F
MODECOMPARE         12CC
MODECOMPARE1        12D8
MODECOMPARE2        12E4
MODECOMPARE3        12F0
MODECOMPARE4        12FC
MODECOMPARE5        1308
MOVEBYTE            10C2
MOVEBYTEDIS         1606
MOVEDESDECODE       116C
MOVEDESMODEDECODE   1184
MOVEDESXNDECODE     1170
MOVELONG            1112
MOVELONGDIS         1616
MOVESRCDECODE       113A
MOVESRCMODEDECODE   1152
MOVESRCXNDECODE     113E
MOVEWORD            10EA
MOVEWORDDIS         160E
PRINT0              1466
PRINT1              1474
PRINT2              1482
PRINT3              1490
PRINT4              149E
PRINT5              14AC
PRINT6              14BA
PRINT7              14C8
PRINT8              14D6
PRINT9              14E4
PRINTA              14F2
PRINTB              1500
PRINTC              150E
PRINTD              151C
PRINTDIRECTION      12A0
PRINTDIRRET         12AC
PRINTE              152A
PRINTF              1538
PRINTHASH           1546
PRINTIMMDATA        126A
PRINTREGISTER       1278
PRINTSHIFTREGNUMBER  1286
PRINTSIZE           12AE
PRINTSIZERET        12CA
RIGHTDIR            1635
RIGHTPAREN          163F
ROTATESHIFT         1624
ROTSHIFTGROUP       123A
SHIFT10             A
SHIFT12             C
SHIFT13             D
SHIFTGRPCOUNT       125E
STACK               A000
START               1000
STARTPT             AA
TEMP                400
WORDSIZE            162B
XNCOMPARE           1310
XNCOMPARE1          131C
XNCOMPARE2          1328
XNCOMPARE3          1334
XNCOMPARE4          1340
XNCOMPARE5          134C
XNCOMPARE6          1358
XNCOMPARE7          1364
