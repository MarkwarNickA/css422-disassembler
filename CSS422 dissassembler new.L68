00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.02
Created On: 11/28/2014 1:30:29 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :CSS422 Project
00000000                             3  * Written by :Nicholas Abel and Julio Perez
00000000                             4  * Date       :November 7, 2014
00000000                             5  * Description:Disassembler
00000000                             6  *-----------------------------------------------------------
00000000  =000000AA                  7  STARTPT   EQU $AA     *starting point
00000000  =00000055                  8  ENDPT     EQU $55     *ending point
00000000  =00000400                  9  temp      EQU $400    *location to work at
00000000  =0000A000                 10  stack     EQU $A000
00000000  =00001217                 11  example   EQU %0001001000010111    * I made up bits 0 to 11      
00000000  =0000000C                 12  shift12   EQU 12                   * Shift 12 bits 
00000000  =0000000A                 13  shift10   EQU 10                   * Shift 10 bits
00000000  =0000000D                 14  shift13   EQU 13 
00000000                            15  
00000000                            16  
00001000                            17          ORG    $1000
00001000                            18  START:                          
00001000                            19  *        LEA     ASKSTART, A1    *message to ask user for input
00001000                            20  *        MOVE.B  #13, D0         *rule 13 allows print without line feed and carriage return if neccesary
00001000                            21  *        TRAP    #15             *Display A1 message
00001000                            22  *        
00001000                            23  *        MOVE.B  #4, D0          *input rule saves to D1
00001000                            24  *        TRAP    #15             *initiate read from keyboard
00001000                            25  *        
00001000                            26  *        MOVE.B  D1, STARTPT        *save number to NUM1
00001000                            27  *        
00001000                            28  *        LEA     ASKEND, A1      *ask about ending memory location
00001000                            29  *        MOVE.B  #13, D0         
00001000                            30  *        TRAP    #15             *display A1
00001000                            31  *        
00001000                            32  *        MOVE.B  #4, D0          *
00001000                            33  *        TRAP    #15
00001000                            34  *        
00001000                            35  *        MOVE.B  D1, ENDPT         *ending memory location stored
00001000                            36  
00001000  4FF9 0000A000             37          LEA     stack,SP        *Load the SP
00001006  41F9 00001024             38          LEA     jmp_table,A0    *Index into the table
0000100C                            39  
0000100C  4280                      40          CLR.L   D0              *Zero it
0000100E  4281                      41          CLR.L   D1
00001010                            42   
00001010                            43  *Get word size element
00001010  3C3C 1217                 44              MOVE.W      #example,D6     *variable put in place        
00001014  3006                      45              MOVE.W      D6, D0
00001016  123C 000C                 46              MOVE.B      #shift12,D1       *Shift 12 bits to the right  
0000101A  E268                      47              LSR.W       D1,D0           *Move the bits
0000101C  C0FC 0006                 48              MULU        #6,D0       *Form offset     
00001020                            49  
00001020  4EB0 0000                 50              JSR         0(A0,D0)    *Jump indirect with index
00001024                            51  * check read pointer location against EnDPt if end done
00001024                            52  * otherwise move back into read sub routine
00001024                            53                      
00001024                            54  
00001024                            55  *----------------------------------------------------------------
00001024                            56  *                       OpCode ID Table                         |
00001024                            57  *----------------------------------------------------------------
00001024                            58  
00001024                            59  
00001024                            60  jmp_table  
00001024                            61  
00001024  4EF9 00001084             62                 JMP         code0000
0000102A                            63  
0000102A  4EF9 00001088             64                 JMP         code0001
00001030                            65  
00001030  4EF9 0000108C             66                 JMP         code0010
00001036                            67  
00001036  4EF9 00001090             68                 JMP         code0011
0000103C                            69  
0000103C  4EF9 00001094             70                 JMP         code0100
00001042                            71  
00001042  4EF9 00001098             72                 JMP         code0101
00001048                            73  
00001048  4EF9 0000109C             74                 JMP         code0110
0000104E                            75  
0000104E  4EF9 000010A0             76                 JMP         code0111
00001054                            77  
00001054  4EF9 000010A4             78                 JMP         code1000
0000105A                            79  
0000105A  4EF9 000010A8             80                 JMP         code1001
00001060                            81  
00001060  4EF9 000010AC             82                 JMP         code1010
00001066                            83  
00001066  4EF9 000010B0             84                 JMP         code1011
0000106C                            85  
0000106C  4EF9 000010B2             86                 JMP         code1100
00001072                            87  
00001072  4EF9 000010B6             88                 JMP         code1101
00001078                            89  
00001078  4EF9 000010BA             90                 JMP         code1110
0000107E                            91  
0000107E  4EF9 000010BE             92                 JMP         code1111
00001084                            93  
00001084                            94  *subroutines from jump table
00001084                            95  
00001084                            96  
00001084  4E72 2700                 97  code0000       STOP        #$2700
00001088                            98  
00001088  6000 0038                 99  code0001       BRA         MoveByte
0000108C                           100  
0000108C  4E72 2700                101  code0010       STOP        #$2700
00001090                           102  
00001090  4E72 2700                103  code0011       STOP        #$2700
00001094                           104  
00001094  4E72 2700                105  code0100       STOP        #$2700
00001098                           106  
00001098  4E72 2700                107  code0101       STOP        #$2700
0000109C                           108  
0000109C  4E72 2700                109  code0110       STOP        #$2700
000010A0                           110  
000010A0  4E72 2700                111  code0111       STOP        #$2700
000010A4                           112  
000010A4  4E72 2700                113  code1000       STOP        #$2700
000010A8                           114  
000010A8  4E72 2700                115  code1001       STOP        #$2700
000010AC                           116  
000010AC  4E72 2700                117  code1010       STOP        #$2700
000010B0                           118   
000010B0  60FE                     119  code1011       BRA        code1011
000010B2                           120  
000010B2  4E72 2700                121  code1100       STOP        #$2700
000010B6                           122  
000010B6  4E72 2700                123  code1101       STOP        #$2700
000010BA                           124  
000010BA  4E72 2700                125  code1110       STOP        #$2700
000010BE                           126  
000010BE  4E72 2700                127  code1111       STOP        #$2700
000010C2                           128  
000010C2                           129   
000010C2                           130  
000010C2                           131  *----------------------------------------------------------------
000010C2                           132  *                OpCode Breakdown Methods                       |
000010C2                           133  *----------------------------------------------------------------
000010C2                           134  
000010C2                           135  *--------------MOVE.B Decode-----------------------------
000010C2                           136  
000010C2  4EB9 00001384            137  MoveByte        JSR     disMoveByte
000010C8                           138  
000010C8                           139  *continue searching through the machine code for source then destination
000010C8                           140  *because of writing format
000010C8  4280                     141                  CLR.L   D0
000010CA  4281                     142                  CLR.L   D1
000010CC  3006                     143                  MOVE.W  D6, D0     *reallocate example to reconfigure for next step
000010CE  4EB9 000010F0            144                  JSR     MoveSrcDecode * src decode
000010D4  4EB9 000012EA            145                  JSR     displayComma
000010DA  4EB9 000012F8            146                  JSR     displaySpace
000010E0  4EB9 0000111A            147                  JSR     MoveDesDecode   *destination decode
000010E6  4EB9 00001306            148                  JSR     displayLine 
000010EC  4E71                     149                  NOP
000010EE  4E75                     150                  RTS
000010F0                           151           
000010F0                           152  
000010F0                           153  
000010F0                           154  *----------------------------------------------------------------
000010F0                           155  *                  MOVE   Decode Methods                        |
000010F0                           156  *----------------------------------------------------------------
000010F0                           157  
000010F0  6000 0002                158  MoveSrcDecode   BRA MoveSrcModeDecode
000010F4                           159  
000010F4                           160          
000010F4                           161  MoveSrcModeDecode
000010F4  3006                     162                  MOVE.W  D6, D0
000010F6  EC58                     163                  ROR.W   #6, D0
000010F8  123C 000A                164                  MOVE.B  #shift10,D1       *Shift 10 bits to the right  
000010FC                           165  
000010FC  E268                     166                  LSR.W   D1,D0           *Move the bits
000010FE                           167                  
000010FE  E648                     168                  LSR.W   #3, D0   *D2 now has the mode
00001100  4EB9 0000115A            169                  JSR     ModeCompare
00001106  6000 0002                170                  BRA     MoveSrcXnDecode    
0000110A                           171  
0000110A                           172  MoveSrcXnDecode
0000110A  3006                     173                  MOVE.W  D6, D0
0000110C  E658                     174                  ROR.W   #3, D0       * last three bits to isolate Xn
0000110E                           175                  
0000110E  123C 000D                176                  MOVE.B  #shift13, D1
00001112  E268                     177                  LSR.W   D1,D0        *format is good last three bits in least signifant location
00001114  6000 0080                178                  Bra     XnCompare
00001118  4E75                     179                  RTS
0000111A                           180  
0000111A                           181  
0000111A                           182  *------------
0000111A  6000 0002                183  MoveDesDecode   BRA     MoveDesModeDecode        
0000111E                           184          
0000111E                           185  MoveDesModeDecode
0000111E  1E3C 0001                186                  MOVE.B  #%1, D7  *set flag for destination    
00001122  3006                     187                  MOVE.W  D6, D0
00001124  123C 000C                188                  MOVE.B  #shift12, D1
00001128  E278                     189                  ROR.W   D1, D0
0000112A  123C 000A                190                  MOVE.B  #shift10, D1
0000112E                           191                  
0000112E  E268                     192                  LSR.W   D1, D0
00001130                           193                  *must isolate the mode
00001130  E658                     194                  ROR.W   #3, D0
00001132  123C 000D                195                  MOVE.B  #shift13, D1
00001136  E268                     196                  LSR.W   D1, D0       *mode isolated
00001138                           197                  
00001138  4EB9 0000115A            198                  JSR     ModeCompare
0000113E  4E71                     199                  NOP
00001140  6000 0002                200                  BRA     MoveDesXnDecode
00001144                           201  
00001144                           202  
00001144                           203  MoveDesXnDecode
00001144  3006                     204                  MOVE.W  D6,D0
00001146  123C 000C                205                  MOVE.B  #shift12, D1
0000114A  E278                     206                  ROR.W   D1, D0
0000114C  123C 000D                207                  MOVE.B  #shift13, D1
00001150                           208                  
00001150  E268                     209                  LSR.W   D1, D0    *isolates Xn
00001152                           210                  
00001152  4EB9 00001196            211                  JSR      XnCompare
00001158  4E75                     212                  RTS
0000115A                           213  
0000115A                           214  *----------------------------------------------------------------
0000115A                           215  *                         Comparisons                           |
0000115A                           216  *----------------------------------------------------------------
0000115A                           217  
0000115A                           218  
0000115A                           219  *------------------Mode Comparisons -----------------------------------------
0000115A                           220  
0000115A  0C00 0000                221  ModeCompare     CMPI.B  #%000, D0 * last three are zeroes
0000115E  6700 0096                222                  BEQ     disDnRegMode       *jump to subroutine for Data register Source
00001162  6600 0002                223                  BNE     ModeCompare1              *FIXME: needs to have not equal Branch here
00001166                           224                  
00001166  0C00 0001                225  ModeCompare1    CMPI.B  #%001, D0
0000116A  6700 00A0                226                  BEQ     disAnRegMode
0000116E  6600 0002                227                  BNE     ModeCompare2
00001172                           228                  
00001172  0C00 0002                229  ModeCompare2    CMPI.B  #%010, D0
00001176  6700 00AA                230                  BEQ     disAnIndMode
0000117A  6600 0002                231                  BNE     ModeCompare3
0000117E                           232                  
0000117E  0C00 0003                233  ModeCompare3    CMPI.B  #%011, D0
00001182                           234                  *BEQ    disAnIndPostMode
00001182  6600 0002                235                  BNE     ModeCompare4
00001186                           236  
00001186  0C00 0004                237  ModeCompare4    CMPI.B  #%100, D0
0000118A                           238                  *BEQ    disAnIndPreMode
0000118A  6600 0002                239                  BNE     ModeCompare5
0000118E                           240                  
0000118E  0C00 0007                241  ModeCompare5    CMPI.B  #%111, D0
00001192                           242                  *BEQ    disEAmode
00001192  6600 01FE                243                  BNE     disError
00001196                           244  
00001196                           245               
00001196                           246  
00001196                           247  *---------------------Register Compare---------------------                
00001196  0C00 0000                248  XnCompare       CMPI.b  #%000, D0
0000119A  6700 0178                249                  BEQ     XnIs0
0000119E  6600 0002                250                  BNE     XnCompare1
000011A2                           251                  
000011A2  0C00 0001                252  XnCompare1      CMPI.b  #%001, D0
000011A6  6700 017A                253                  BEQ     XnIs1
000011AA  6600 0002                254                  BNE     XnCompare2
000011AE                           255  
000011AE  0C00 0002                256  XnCompare2      CMPI.b  #%010, D0
000011B2  6700 017C                257                  BEQ     XnIs2
000011B6  6600 0002                258                  BNE     XnCompare3
000011BA                           259  
000011BA  0C00 0003                260  XnCompare3      CMPI.b  #%011, D0
000011BE  6700 017E                261                  BEQ     XnIs3
000011C2  6600 0002                262                  BNE     XnCompare4
000011C6                           263  
000011C6  0C00 0004                264  XnCompare4      CMPI.b  #%100, D0
000011CA  6700 0180                265                  BEQ     XnIs4
000011CE  6600 0002                266                  BNE     XnCompare5
000011D2                           267  
000011D2  0C00 0005                268  XnCompare5      CMPI.b  #%101, D0
000011D6  6700 0182                269                  BEQ     XnIs5
000011DA  6600 0002                270                  BNE     XnCompare6
000011DE                           271  
000011DE  0C00 0006                272  XnCompare6      CMPI.b  #%110, D0
000011E2  6700 0184                273                  BEQ     XnIs6
000011E6  6600 0002                274                  BNE     XnCompare7
000011EA                           275  
000011EA  0C00 0007                276  XnCompare7      CMPI.b  #%111, D0
000011EE  6700 0186                277                  BEQ     XnIs7
000011F2  6600 019E                278                  BNE     disError
000011F6                           279                  * FIXME we may need to use this for a bad command BNE XnCompare1
000011F6                           280  
000011F6                           281  
000011F6                           282  *----------------------------------------------------------------
000011F6                           283  *                          DISPLAYS                             |
000011F6                           284  *----------------------------------------------------------------
000011F6                           285  
000011F6                           286  
000011F6                           287  
000011F6                           288  
000011F6                           289  **---------------------MODE ShortCuts----------------------
000011F6                           290  *
000011F6                           291  *DnSrcDisXn       JSR     XnDecode
000011F6                           292  *                 Bra     disDnRegBack
000011F6                           293  *        
000011F6                           294  *DnDesDisXn       JSR     DesXnDecode
000011F6                           295  *                 Bra     disDnRegBack
000011F6                           296  *                    
000011F6                           297  *AnSrcDisXn       JSR     XnDecode
000011F6                           298  *                 Bra     disAnRegBack
000011F6                           299  *        
000011F6                           300  *AnDesDisXn       JSR     DesXnDecode
000011F6                           301  *                 Bra     disAnRegBack
000011F6                           302  *
000011F6                           303  *AnIndSrcDisXn    JSR     XnDecode
000011F6                           304  *                 Bra     disAnIndBack
000011F6                           305  *        
000011F6                           306  *AnIndDesDisXn    JSR     DesXnDecode
000011F6                           307  *                 Bra     disAnIndBack
000011F6                           308  *
000011F6                           309  *AnPreSrcDisXn    JSR     XnDecode
000011F6                           310  *                 Bra     disAnPreBack
000011F6                           311  *        
000011F6                           312  *AnPreDesDisXn    JSR     DesXnDecode
000011F6                           313  *                 Bra     disAnPreBack
000011F6                           314  *
000011F6                           315  *
000011F6                           316  *AnPosSrcDisXn    JSR     XnDecode
000011F6                           317  *                 Bra     disAnPosBack
000011F6                           318  *        
000011F6                           319  *AnPosDesDisXn    JSR     DesXnDecode
000011F6                           320  *                 Bra     disAnPosBack                
000011F6                           321  *
000011F6                           322  *
000011F6                           323  *---------------------MODE Displays----------------------
000011F6                           324  
000011F6                           325  
000011F6                           326  *-------------------
000011F6                           327  
000011F6  4EB9 00001296            328  disDnRegMode    JSR     disDnReg
000011FC                           329  
000011FC  0C07 0001                330                  CMPI.B  #%1, D7
Line 331 ERROR: Undefined symbol
00001200  6700 F328                331                  BEQ     DnDesDisXn
Line 332 ERROR: Undefined symbol
00001204  6600 F324                332                  BNE     DnSrcDisXn
00001208                           333                  
00001208  4287                     334  disDnRegBack    CLR.L   D7
0000120A  4E75                     335                  RTS
0000120C                           336  
0000120C                           337  *-------------------
0000120C                           338                      
0000120C  4EB9 000012A4            339  disAnRegMode    JSR     disAnReg
00001212                           340  
00001212  0C07 0001                341                  CMPI.B  #%1, D7
Line 342 ERROR: Undefined symbol
00001216  6700 F312                342                  BEQ     AnDesDisXn
Line 343 ERROR: Undefined symbol
0000121A  6600 F30E                343                  BNE     AnSrcDisXn
0000121E                           344                  
0000121E  4287                     345  disAnRegBack    CLR.L   D7
00001220  4E75                     346                  RTS
00001222                           347  
00001222                           348  *-------------------
00001222                           349  
00001222  4EB9 000012B2            350  disAnIndMode    JSR     disLeftParen
00001228  4EB9 000012A4            351                  JSR     disAnReg
0000122E                           352                  
0000122E  0C07 0001                353                  CMPI.B  #%1, D7
Line 354 ERROR: Undefined symbol
00001232  6700 F2F6                354                  BEQ     AnIndDesDisXn
Line 355 ERROR: Undefined symbol
00001236  6600 F2F2                355                  BNE     AnIndSrcDisXn
0000123A                           356                  
0000123A  4287                     357  disAnIndBack    CLR.L   D7
0000123C                           358                  
0000123C  4EB9 000012C0            359                  JSR     disRightParen
00001242                           360                  
00001242  4E75                     361                  RTS
00001244                           362                  
00001244                           363  *-------------------
00001244                           364  
00001244  4EB9 000012B2            365  disAnPosMode    JSR     disLeftParen
0000124A  4EB9 000012A4            366                  JSR     disAnReg
00001250                           367                  
00001250  0C07 0001                368                  CMPI.B  #%1, D7
Line 369 ERROR: Undefined symbol
00001254  6700 F2D4                369                  BEQ     AnPosDesDisXn
Line 370 ERROR: Undefined symbol
00001258  6600 F2D0                370                  BNE     AnPosSrcDisXn
0000125C                           371                  
0000125C  4287                     372  disAnPosBack    CLR.L   D7
0000125E                           373                  
0000125E  4EB9 000012C0            374                  JSR     disRightParen
00001264  4EB9 000012CE            375                  JSR     displayPlus
0000126A                           376                  
0000126A  4E75                     377                  RTS
0000126C                           378  
0000126C                           379  *-------------------
0000126C                           380  
0000126C  4EB9 000012DC            381  disAnPreMode    JSR     displayMinus
00001272  4EB9 000012B2            382                  JSR     disLeftParen
00001278  4EB9 000012A4            383                  JSR     disAnReg
0000127E                           384                  
0000127E  0C07 0001                385                  CMPI.B  #%1, D7
Line 386 ERROR: Undefined symbol
00001282  6700 F2A6                386                  BEQ     AnPreDesDisXn
Line 387 ERROR: Undefined symbol
00001286  6600 F2A2                387                  BNE     AnPreSrcDisXn
0000128A                           388                  
0000128A  4287                     389  disAnPreBack    CLR.L   D7
0000128C                           390                  
0000128C  4EB9 000012C0            391                  JSR     disRightParen
00001292                           392                  
00001292  4287                     393                  CLR.L   D7
00001294  4E75                     394                  RTS
00001296                           395                  
00001296                           396  *-------------------
00001296                           397  
00001296                           398  
00001296                           399        
00001296                           400                        
00001296                           401  *----------------------Register Displays---------------------- 
00001296                           402  
00001296                           403  
00001296                           404  *------------------Characters--------------------------------
00001296                           405  
00001296  43F9 000013BE            406  disDnReg        LEA     DnReg, A1
0000129C  103C 000E                407                  MOVE.B  #14, D0
000012A0  4E4F                     408                  TRAP    #15
000012A2  4E75                     409                  RTS
000012A4                           410  
000012A4                           411  
000012A4  43F9 000013C0            412  disAnReg        LEA     AnReg, A1
000012AA  103C 000E                413                  MOVE.B  #14, D0
000012AE  4E4F                     414                  TRAP    #15
000012B0  4E75                     415                  RTS
000012B2                           416  
000012B2  43F9 000013C2            417  disLeftParen    LEA     LeftParen, A1
000012B8  103C 000E                418                  MOVE.B  #14, D0
000012BC  4E4F                     419                  TRAP    #15
000012BE  4E75                     420                  RTS
000012C0                           421                  
000012C0  43F9 000013C4            422  disRightParen   LEA     RightParen, A1
000012C6  103C 000E                423                  MOVE.B  #14, D0
000012CA  4E4F                     424                  TRAP    #15
000012CC  4E75                     425                  RTS
000012CE                           426                  
000012CE                           427                
000012CE  43F9 000013C6            428  displayPlus     LEA     disPlus, A1
000012D4  103C 000E                429                  MOVE.B  #14, D0
000012D8  4E4F                     430                  TRAP    #15
000012DA  4E75                     431                  RTS
000012DC                           432                  
000012DC  43F9 000013C8            433  displayMinus    LEA     disMinus, A1
000012E2  103C 000E                434                  MOVE.B  #14, D0
000012E6  4E4F                     435                  TRAP    #15
000012E8  4E75                     436                  RTS
000012EA                           437  
000012EA  43F9 000013CA            438  displayComma    LEA     disComma, A1
000012F0  103C 000E                439                  MOVE.B  #14, D0
000012F4  4E4F                     440                  TRAP    #15
000012F6  4E75                     441                  RTS
000012F8                           442                  
000012F8  43F9 000013CC            443  displaySpace    LEA     disSpace, A1
000012FE  103C 000E                444                  MOVE.B  #14, D0
00001302  4E4F                     445                  TRAP    #15
00001304  4E75                     446                  RTS
00001306                           447                  
00001306  43F9 0000142C            448  displayLine     LEA     disNewLine, A1
0000130C  103C 0000                449                  MOVE.B  #0, D0
00001310  4E4F                     450                  TRAP    #15
00001312  4E75                     451                  RTS
00001314                           452                  
00001314                           453                  
00001314                           454  *-----------Numbers------------               
00001314  43F9 0000141C            455  XnIs0           LEA     disZero, A1
0000131A  103C 000E                456                  MOVE.B  #14, D0
0000131E  4E4F                     457                  TRAP    #15
00001320  4E75                     458                  RTS
00001322                           459                  
00001322  43F9 0000141E            460  XnIs1           LEA     disOne, A1
00001328  103C 000E                461                  MOVE.B  #14, D0
0000132C  4E4F                     462                  TRAP    #15
0000132E  4E75                     463                  RTS
00001330                           464  
00001330  43F9 00001420            465  XnIs2           LEA     disTwo, A1
00001336  103C 000E                466                  MOVE.B  #14, D0
0000133A  4E4F                     467                  TRAP    #15
0000133C  4E75                     468                  RTS
0000133E                           469  
0000133E  43F9 00001422            470  XnIs3           LEA     disThree, A1
00001344  103C 000E                471                  MOVE.B  #14, D0
00001348  4E4F                     472                  TRAP    #15
0000134A  4E75                     473                  RTS
0000134C                           474  
0000134C  43F9 00001424            475  XnIs4           LEA     disFour, A1
00001352  103C 000E                476                  MOVE.B  #14, D0
00001356  4E4F                     477                  TRAP    #15
00001358  4E75                     478                  RTS
0000135A                           479  
0000135A  43F9 00001426            480  XnIs5           LEA     disFive, A1
00001360  103C 000E                481                  MOVE.B  #14, D0
00001364  4E4F                     482                  TRAP    #15
00001366  4E75                     483                  RTS
00001368                           484  
00001368  43F9 00001428            485  XnIs6           LEA     disSix, A1
0000136E  103C 000E                486                  MOVE.B  #14, D0
00001372  4E4F                     487                  TRAP    #15
00001374  4E75                     488                  RTS
00001376                           489  
00001376  43F9 0000142A            490  XnIs7           LEA     disSeven, A1
0000137C  103C 000E                491                  MOVE.B  #14, D0
00001380  4E4F                     492                  TRAP    #15
00001382  4E75                     493                  RTS
00001384                           494  
00001384                           495  
00001384                           496                  
00001384                           497                
00001384                           498  *----------OpCode-----------------                
00001384  43F9 000013A6            499  disMoveByte     LEA     MOVEByteDis, A1
0000138A  103C 000E                500                  MOVE.B  #14, D0
0000138E  4E4F                     501                  TRAP    #15
00001390  4E75                     502                  RTS                
00001392                           503  
00001392                           504  
00001392                           505  
00001392                           506  
00001392                           507  
00001392                           508  
00001392                           509  *-----------Error------------------         
00001392  43F9 000013A0            510  disError        LEA     Error, A1
00001398  103C 000E                511                  Move.B  #14, D0
0000139C  4E4F                     512                  Trap    #15
0000139E  4E75                     513                  RTS          
000013A0                           514           
000013A0                           515  *----------------------------------------------------------------
000013A0                           516  *                         String constants                      |
000013A0                           517  *----------------------------------------------------------------
000013A0                           518  
000013A0                           519  * Put variables and constants here
000013A0= 65 72 72 6F 72 00        520  Error DC.B  'error', 0
000013A6                           521  
000013A6= 4D 4F 56 45 2E 42 ...    522  MOVEByteDis     DC.B    'MOVE.B ', 0
000013AE= 4D 4F 56 45 2E 57 ...    523  MOVEWordDis     DC.B    'MOVE.W ', 0   
000013B6= 4D 4F 56 45 2E 4C ...    524  MOVELongDis     DC.B    'MOVE.L ', 0
000013BE= 44 00                    525  DnReg           DC.B    'D', 0
000013C0= 41 00                    526  AnReg           DC.B    'A', 0
000013C2= 28 00                    527  LeftParen       DC.B    '(', 0
000013C4= 29 00                    528  RightParen      DC.B    ')', 0
000013C6= 2B 00                    529  disPlus         DC.B    '+', 0
000013C8= 2D 00                    530  disMinus        DC.B    '-', 0
000013CA= 2C 00                    531  disComma        DC.B    ',', 0
000013CC= 20 00                    532  disSpace        DC.B    ' ', 0
000013CE= 49 64 65 6E 74 69 ...    533  ASKSTART        DC.B    'Identify the starting memory location: ', 0
000013F6= 49 64 65 6E 74 69 ...    534  ASKEND          DC.B    'Identify the ending memory location: ', 0
0000141C                           535  
0000141C                           536  *numbers
0000141C= 30 00                    537  disZero         DC.B    '0', 0
0000141E= 31 00                    538  disOne          DC.B    '1', 0
00001420= 32 00                    539  disTwo          DC.B    '2', 0
00001422= 33 00                    540  disThree        DC.B    '3', 0
00001424= 34 00                    541  disFour         DC.B    '4', 0
00001426= 35 00                    542  disFive         DC.B    '5', 0
00001428= 36 00                    543  disSix          DC.B    '6', 0
0000142A= 37 00                    544  disSeven        DC.B    '7', 0
0000142C                           545  
0000142C= 00                       546  disNewLine      DC.B    '', 0
0000142D                           547   
0000142D                           548      END    START        ; last line of source

10 errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ANREG               13C0
ASKEND              13F6
ASKSTART            13CE
CODE0000            1084
CODE0001            1088
CODE0010            108C
CODE0011            1090
CODE0100            1094
CODE0101            1098
CODE0110            109C
CODE0111            10A0
CODE1000            10A4
CODE1001            10A8
CODE1010            10AC
CODE1011            10B0
CODE1100            10B2
CODE1101            10B6
CODE1110            10BA
CODE1111            10BE
DISANINDBACK        123A
DISANINDMODE        1222
DISANPOSBACK        125C
DISANPOSMODE        1244
DISANPREBACK        128A
DISANPREMODE        126C
DISANREG            12A4
DISANREGBACK        121E
DISANREGMODE        120C
DISCOMMA            13CA
DISDNREG            1296
DISDNREGBACK        1208
DISDNREGMODE        11F6
DISERROR            1392
DISFIVE             1426
DISFOUR             1424
DISLEFTPAREN        12B2
DISMINUS            13C8
DISMOVEBYTE         1384
DISNEWLINE          142C
DISONE              141E
DISPLAYCOMMA        12EA
DISPLAYLINE         1306
DISPLAYMINUS        12DC
DISPLAYPLUS         12CE
DISPLAYSPACE        12F8
DISPLUS             13C6
DISRIGHTPAREN       12C0
DISSEVEN            142A
DISSIX              1428
DISSPACE            13CC
DISTHREE            1422
DISTWO              1420
DISZERO             141C
DNREG               13BE
ENDPT               55
ERROR               13A0
EXAMPLE             1217
JMP_TABLE           1024
LEFTPAREN           13C2
MODECOMPARE         115A
MODECOMPARE1        1166
MODECOMPARE2        1172
MODECOMPARE3        117E
MODECOMPARE4        1186
MODECOMPARE5        118E
MOVEBYTE            10C2
MOVEBYTEDIS         13A6
MOVEDESDECODE       111A
MOVEDESMODEDECODE   111E
MOVEDESXNDECODE     1144
MOVELONGDIS         13B6
MOVESRCDECODE       10F0
MOVESRCMODEDECODE   10F4
MOVESRCXNDECODE     110A
MOVEWORDDIS         13AE
RIGHTPAREN          13C4
SHIFT10             A
SHIFT12             C
SHIFT13             D
STACK               A000
START               1000
STARTPT             AA
TEMP                400
XNCOMPARE           1196
XNCOMPARE1          11A2
XNCOMPARE2          11AE
XNCOMPARE3          11BA
XNCOMPARE4          11C6
XNCOMPARE5          11D2
XNCOMPARE6          11DE
XNCOMPARE7          11EA
XNIS0               1314
XNIS1               1322
XNIS2               1330
XNIS3               133E
XNIS4               134C
XNIS5               135A
XNIS6               1368
XNIS7               1376
